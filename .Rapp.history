require(animation)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/PaperNowcasting4")#
fchow<-read.csv("ChowellDonkerPaper.txt",sep=" ",header=T)#
com=fchow$id_comuna#
tcom=table(com)#
l1=length(names(tcom))#
final=NULL
mse=matrix(0,l1,6)#
sub=matrix(0,l1,6)#
comunas=rep(0,l1)#
finfin=NULL#
for(j in 1:l1)#
{#
	print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])#
	fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]#
	activosud=matrix(0,p1-1,4)#
	for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)#
	p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}#
	fin=tabla[pos,]#
	fin=cbind(fin,activos)#
	tact=aggregate(tabla1$x, by=list(tabla1$Group.2), FUN=sum)#
	p1=length(table(fin[,1]))#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(fin[,1]==names(table(fin[,1]))[i])#
		pos[i]=t1[1]#
	}#
	fin2=fin[pos[-1],-c(5,9,10)]#
	tact2=tact[pos[-1],]#
	fechafin=aggregate(ftis0$id_semanaepidemiologica,list(ftis0$fch_fin),mean)[-c(1:13),]#
	fin3=cbind(names(tcom)[j],g[1],fin2,tact2[,2],fechafin[-dim(fechafin)[1],1],ultday[-c(1:4),c(5:6,10)])#
	names(fin3)=c("id_comuna","id_region","Semana Epidemiologica","Fecha Informe","Chowell","Donker","Confirmados Informados","Activos Chowell","Activos Donker","Activos Informados","Fecha Fin SE","Activos UltimaSemana","Confirmados Finales","Activos Finales")#
	pos0=which(fin3[,3]==25)#
	barplot(t(fin3[-pos0,c(10,8,9,14)]),col=1:4,main=f,ylab="",xlab="Semana Epidemiologica",names.arg=fin3[-pos0,3],beside=TRUE)#
	legend("topleft",c("Informados","Estimados Chowell","Estimados Donker","Finales"),col=1:4,cex=.8,lty=1)#
for(clm in 1:3)#
{#
	mse[j,clm]=mean((fin3[c(1:4,6:30),clm+4]-fin3[c(1:4,6:30),13])**2)	#
mse[j,clm+3]=mean((fin3[c(1:4,6:30),clm+7]-fin3[c(1:4,6:30),14])**2)#
sub[j,clm]=mean(na.omit(fin3[c(1:4,6:30),clm+4]/fin3[c(1:4,6:30),13]))	#
sub[j,clm+3]=mean(na.omit(fin3[c(1:4,6:30),clm+7]/fin3[c(1:4,6:30),14]))#
}#
#
	finfin=rbind(finfin,fin3)#
}#
print(apply(mse,2,mean))#
print(apply(sub,2,mean,na.rm=TRUE))#
print(apply(mse,2,sd)/sqrt(l1))#
print(apply(sub,2,sd)/sqrt(l1))#
msefin=data.frame("region"=comunas,"mse"=mse,"sub"=sub)#
names(msefin)=c("id_region","mse_chow","mse_donk","mse_inf","mse_chow_act","mse_donk_act","mse_inf_act","sub_chow","sub_donk","sub_inf","sub_chow_act","sub_donk_act","sub_inf_act")
require(animation)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/PaperNowcasting4")#
fchow<-read.csv("ChowellDonkerPaper.txt",sep=" ",header=T)#
ftis0<-read.csv("ftiniciosintomas.txt",sep=";",header=T)#
com=fchow$id_comuna#
tcom=table(com)#
l1=length(names(tcom))#
final=NULL
mse=matrix(0,l1,6)#
sub=matrix(0,l1,6)#
comunas=rep(0,l1)#
finfin=NULL
for(j in 1:l1)#
{#
	print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])#
	fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]#
	activosud=matrix(0,p1-1,4)#
	for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)#
	p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}#
	fin=tabla[pos,]#
	fin=cbind(fin,activos)#
	tact=aggregate(tabla1$x, by=list(tabla1$Group.2), FUN=sum)#
	p1=length(table(fin[,1]))#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(fin[,1]==names(table(fin[,1]))[i])#
		pos[i]=t1[1]#
	}#
	fin2=fin[pos[-1],-c(5,9,10)]#
	tact2=tact[pos[-1],]#
	fechafin=aggregate(ftis0$id_semanaepidemiologica,list(ftis0$fch_fin),mean)[-c(1:13),]#
	fin3=cbind(names(tcom)[j],g[1],fin2,tact2[,2],fechafin[-dim(fechafin)[1],1],ultday[-c(1:4),c(5:6,10)])#
	names(fin3)=c("id_comuna","id_region","Semana Epidemiologica","Fecha Informe","Chowell","Donker","Confirmados Informados","Activos Chowell","Activos Donker","Activos Informados","Fecha Fin SE","Activos UltimaSemana","Confirmados Finales","Activos Finales")#
	pos0=which(fin3[,3]==25)#
	barplot(t(fin3[-pos0,c(10,8,9,14)]),col=1:4,main=f,ylab="",xlab="Semana Epidemiologica",names.arg=fin3[-pos0,3],beside=TRUE)#
	legend("topleft",c("Informados","Estimados Chowell","Estimados Donker","Finales"),col=1:4,cex=.8,lty=1)#
for(clm in 1:3)#
{#
	mse[j,clm]=mean((fin3[c(1:4,6:30),clm+4]-fin3[c(1:4,6:30),13])**2)	#
mse[j,clm+3]=mean((fin3[c(1:4,6:30),clm+7]-fin3[c(1:4,6:30),14])**2)#
sub[j,clm]=mean(na.omit(fin3[c(1:4,6:30),clm+4]/fin3[c(1:4,6:30),13]))	#
sub[j,clm+3]=mean(na.omit(fin3[c(1:4,6:30),clm+7]/fin3[c(1:4,6:30),14]))#
}#
#
	finfin=rbind(finfin,fin3)#
}
j=1
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]
head(fchow2)
comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados
comunas
comunas[j]
f=names(tcom)[j]#
	g=fchow2$id_region
f
g
tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])
tabla
v
fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]
activosud=matrix(0,p1-1,4)#
	for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)#
	p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}
pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}#
	fin=tabla[pos,]#
	fin=cbind(fin,activos)#
	tact=aggregate(tabla1$x, by=list(tabla1$Group.2), FUN=sum)#
	p1=length(table(fin[,1]))#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(fin[,1]==names(table(fin[,1]))[i])#
		pos[i]=t1[1]#
	}#
	fin2=fin[pos[-1],-c(5,9,10)]#
	tact2=tact[pos[-1],]
fechafin=aggregate(ftis0$id_semanaepidemiologica,list(ftis0$fch_fin),mean)[-c(1:13),]
fechafin
fin3=cbind(names(tcom)[j],g[1],fin2,tact2[,2],fechafin[-dim(fechafin)[1],1],ultday[-c(1:4),c(5:6,10)])
g[1]
names(tcom)[j],g[1],
fin2
head(fin)
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])#
	fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]#
	activosud=matrix(0,p1-1,4)
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])#
	fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]
ultday2
names(table(tabla[,2]))
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])
tabla
require(animation)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/PaperNowcasting4")#
fchow<-read.csv("ChowellDonkerPaper.txt",sep=" ",header=T)#
ftis0<-read.csv("ftiniciosintomas.txt",sep=";",header=T)#
com=fchow$id_comuna#
tcom=table(com)#
l1=length(names(tcom))#
final=NULL
mse=matrix(0,l1,6)#
sub=matrix(0,l1,6)#
comunas=rep(0,l1)#
finfin=NULL
j=1
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]
fchow2
prepare_data<-function(x,date,week,year_se)#
{#
	w=week#
	d=date#
	y=year_se#
	w=as.factor(w)#
	c=rep(0,length(w))#
	fechas=read.table("fin_se.txt",header=T)#
	fch=as.factor(fechas$fch_fin)#
	for(j in 1:length(levels(fch)))#
	{	#
		pos=which(w==fechas$week[j] & y==fechas$year[j])#
		c[pos]=as.Date(levels(fch)[j])#
	}#
	lyear=names(table(year_se))#
	w1=rep(0,length(w))#
	for(i in 1:length(lyear))#
	{#
		pos=which(y==lyear[i])#
		w1[pos]=as.numeric(w[pos])+max(w1)#
	}#
	levels(w1)=1:length(table(w1))#
	dif=as.numeric(as.Date(b)-as.numeric(as.character(c)))#
	tabla=aggregate(x, by=list(d,dif,w1), FUN=sum)#
	names(tabla)=c("date","delay","week","value")#
	return(list(table=tabla))#
}#
#
delay_table<-function(x,week,delay,window)#
{#
	tabla0=cbind(week,delay,x)#
	pos=which(tabla0[,2]>0)#
	if(length(pos)>0)#
		tabla=tabla0[pos,]#
	t2=table(tabla[,1])#
	l=length(t2)#
	rezago=matrix(0,l,l)#
	p=rep(0,l)#
	p0=0#
	l1=l-window+1#
	for(j in l:l1)#
		{#
			tabla3=tabla0[which(tabla0[,1]==(names(t2))[j]),]#
			tabla3=matrix(tabla3,ncol=3)#
			tabla3=tabla3[which(tabla3[,2]>0),]#
			tabla3=matrix(tabla3,ncol=3)#
			p[l-j+1]=dim(tabla3)[1]#
			k=1#
			s=1#
			if(j<l)#
				p[l-j+1]=p[l-j+1]-sum(p[-c(l-j+1)])#
			while (k <= dim(tabla3)[1])#
			{#
				rezago[j,s]=tabla3[k,3]#
				if(k==1)#
				{#
					rezago[j,s]=tabla3[1,3]#
					k=p[l-j+1]#
				}#
				if(s>1)#
				{	#
					pos=p[l-j+1-s+1]#
					if(pos<0  | is.na(pos))#
						pos=1#
					if (pos>1)#
					{#
						rezago[j,s]=sum(tabla3[k-1+pos-1,3])#
					}#
					rezago[j,s]=rezago[j,s]-sum(rezago[j,-s])#
					if (pos>1)#
						k=k+1#
				}#
				s=s+1#
				k=k+1#
			}#
		}	#
		delaytable=rezago[l1:l,1:window]#
		return(list(delaytable=delaytable))#
}#
chowell_nowcasting<-function(delay,l_act=11)#
{#
	rezago=delay#
	Ntc=apply(rezago,1,sum)#
	nx=apply(rezago,2,sum)#
	Nx=nx#
	Nx[1]=sum(Ntc)-sum(nx[-1])#
	for(j in 2:length(nx))#
	{#
		Nx[j]=sum(Ntc[-((length(nx):(length(nx)-j+2)))])-sum(nx[-(1:j)])#
	}#
	gx=nx/Nx#
	gx1=1-gx#
	gx1[is.na(gx1)]=1#
	Nest=rep(0,length(nx))#
	for(j in 2:length(nx))#
	{#
		Nest[j]=Ntc[j]/prod(gx1[(length(nx):(length(nx)-j+2))]	)#
	}#
	variacion=Nest[length(Nest)]/Nest[length(Nest)-1]#
	variacion=rep(NA,length(nx)-1)#
	l2_act=trunc(l_act/7)#
	l3_act=l_act%%7/7#
	for(j in 3:length(nx))#
	{#
		variacion[j-1]=Nest[j]/Nest[j-1]-1#
	}#
	activos=rep(0,length(nx)-(l2_act))#
	for(j in (l2_act+2):length(nx))#
	{#
		activos[j-(l2_act)]=sum(Nest[j:(j-l2_act+1)])+l3_act*Nest[j-(l2_act)]#
	}#
	finmat=matrix(0,dim(rezago)[1]-1,3)#
	finmat[(dim(finmat)[1]-length(Nest)+1):dim(finmat)[1],]=cbind(round(Nest[-1]),round(variacion,2),activos)#
	return(list(chowell=finmat))#
}#
donker_nowcasting<-function(delay,l_act=11)#
{#
	rezago=delay#
	freq=apply(rezago,2,sum)#
	freq[which(freq<0)]=0#
	Ntc=apply(rezago,1,sum)#
	prob=freq/sum(freq)#
	prob1=cumsum(prob)#
	freq1=Ntc[length(Ntc):1]#
	Ndonk=round(freq1/prob1,0)#
	Ndonk=Ndonk[length(freq):1]	#
	variacion=Ndonk[length(Ndonk)]/Ndonk[length(Ndonk)-1]#
	variacion=rep(NA,length(Ndonk)-1)#
	l2_act=trunc(l_act/7)#
	l3_act=l_act%%7/7#
	for(j in 3:length(Ndonk))#
	{#
		variacion[j-1]=Ndonk[j]/Ndonk[j-1]-1#
	}#
	activos=rep(0,length(Ndonk)-(l2_act))#
	for(j in (l2_act+2):length(Ndonk))#
	{#
		activos[j-(l2_act)]=sum(Ndonk[j:(j-l2_act+1)])+l3_act*Ndonk[j-(l2_act)]#
	}#
	finmat=matrix(0,dim(rezago)[1]-1,3)#
	finmat[(dim(finmat)[1]-length(Ndonk)+1):dim(finmat)[1],]=cbind(round(Ndonk[-1]),round(variacion,2),activos)#
	return(list(donker=finmat))#
}
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/PaperNowcasting4")#
ftis0<-read.csv("ftiniciosintomas.txt",sep=";",header=T)#
ftcomuna<-read.csv("ftcomuna.txt",sep=";",header=T)#
pub=ftis0$fch_publicacion#
t0=table(pub)#
l0=length(names(t0))#
year=as.numeric(substr(ftis0$id_semanaepidemiologica, 1, 4))#
se=ftis0$id_semanaepidemiologica %% 100#
se[which(year==2021)]=se[which(year==2021)]+53#
ftis0$id_semanaepidemiologica2=ftis0$id_semanaepidemiologica#
ftis0$id_semanaepidemiologica2=se#
ftis0$id_semanaepidemiologica=ftis0$id_semanaepidemiologica2#
final=NULL
m=l0
print(m)#
	ftis=ftis0[which(ftis0$fch_publicacion<=names(t0)[m]),]#
	com=ftis0$id_comuna#
	t1=table(com)#
	l1=length(names(t1))#
	window=5
i=1
ftis2=ftis[which(ftis$id_comuna==names(t1)[i] & ftis$fch_inicio<=names(t0)[m]),]#
		ftis3=ftis2[which(ftis2$fch_publicacion==names(t0)[m]),]	#
ftcomuna2=ftcomuna[which(ftcomuna$id_comuna==names(t1)[i] & ftcomuna$fch_confirmado==names(t0)[m]),]	#
	a=ftis2$id_semanaepidemiologica#
	b=ftis2$fch_publicacion#
	e=ftis2$cant_casosconfirmados#
	f=ftis2$txt_comuna[1]#
	h=ftis2$id_region[1]#
	levels(a)=8:max(a)
a
year_se=rep(2020,length(a))#
	year_se[which(a>53)]=2021#
	a[which(a>53)]=a[which(a>53)]-53#
	y=prepare_data(e,b,a,year_se)#
	week=y$table$week#
	delay=y$table$delay#
	x=y$table$value#
	window=5#
	dt=delay_table(x,week,delay,window)#
	#print(dt)#
	chow=chowell_nowcasting(dt$delaytable)#
	#print(chow)#
	donk=donker_nowcasting(dt$delaytable)#
	#print(donk)#
	fechas=names(table(y$table$date))#
	fin=y$table[which(y$table$date==fechas[length(fechas)]),]#
	fin=fin[which(fin[,2]>0),]#
	real=fin[(dim(fin)[1]-window+2):dim(fin)[1],4]#
	nowfin=cbind(chow$chowell,donk$donker,real)#
	h=ftis3$id_region[1]#
pobc=sum(aggregate(cant_poblacioncomuna~id_comuna,ftis3,mean)[,2])#
	chow2=c(fin[1:(dim(fin)[1]-window+1),4]#
,chow$chowell[,1])#
	donk2=c(fin[1:(dim(fin)[1]-window+1),4]#
,donk$donker[,1])#
	varsem=c(NA,chow2[-1]/chow2[-length(chow2)]-1)#
	varsem[which(varsem==Inf)]=NA#
	varsem[is.na(varsem)]=NA#
	varsem2=c(NA,donk2[-1]/donk2[-length(donk2)]-1)#
	varsem2[which(varsem2==Inf)]=NA#
	varsem2[is.na(varsem2)]=NA#
	actchow=c(0,chow2[-1]+chow2[-length(chow2)])#
	actdonk=c(0,donk2[-1]+donk2[-length(donk2)])#
	pos=which(fin[,3]>=43)#
	actchow[pos]=round(chow2[pos]+(4/7)*chow2[pos-1],0)#
	actdonk[pos]=round(donk2[pos]+(4/7)*donk2[pos-1],0)#
	g1=ftcomuna2$cant_casosactivos#
	g2=rep(0,dim(fin)[1])#
	g2[length(g2)]=g1
a[fin[,3]]
tail(fin)
a
final2=cbind(names(t0)[m],f,h,fin[,3],chow2,varsem,actchow,donk2,varsem2,actdonk,g2,fin[,4])
head(final2)
table(final2[,3])
table(final2[,4])
prepare_data<-function(x,date,week,year_se)#
{#
	w=week#
	d=date#
	y=year_se#
	w=as.factor(w)#
	c=rep(0,length(w))#
	fechas=read.table("fin_se.txt",header=T)#
	fch=as.factor(fechas$fch_fin)#
	for(j in 1:length(levels(fch)))#
	{	#
		pos=which(w==fechas$week[j] & y==fechas$year[j])#
		c[pos]=as.Date(levels(fch)[j])#
	}#
	lyear=names(table(year_se))#
	w1=rep(0,length(w))#
	for(i in 1:length(lyear))#
	{#
		pos=which(y==lyear[i])#
		w1[pos]=as.numeric(w[pos])+max(w1)#
	}#
	levels(w1)=1:length(table(w1))#
	dif=as.numeric(as.Date(b)-as.numeric(as.character(c)))#
	tabla=aggregate(x, by=list(d,dif,w1), FUN=sum)#
	names(tabla)=c("date","delay","week","value")#
	return(list(table=tabla))#
}#
#
delay_table<-function(x,week,delay,window)#
{#
	tabla0=cbind(week,delay,x)#
	pos=which(tabla0[,2]>0)#
	if(length(pos)>0)#
		tabla=tabla0[pos,]#
	t2=table(tabla[,1])#
	l=length(t2)#
	rezago=matrix(0,l,l)#
	p=rep(0,l)#
	p0=0#
	l1=l-window+1#
	for(j in l:l1)#
		{#
			tabla3=tabla0[which(tabla0[,1]==(names(t2))[j]),]#
			tabla3=matrix(tabla3,ncol=3)#
			tabla3=tabla3[which(tabla3[,2]>0),]#
			tabla3=matrix(tabla3,ncol=3)#
			p[l-j+1]=dim(tabla3)[1]#
			k=1#
			s=1#
			if(j<l)#
				p[l-j+1]=p[l-j+1]-sum(p[-c(l-j+1)])#
			while (k <= dim(tabla3)[1])#
			{#
				rezago[j,s]=tabla3[k,3]#
				if(k==1)#
				{#
					rezago[j,s]=tabla3[1,3]#
					k=p[l-j+1]#
				}#
				if(s>1)#
				{	#
					pos=p[l-j+1-s+1]#
					if(pos<0  | is.na(pos))#
						pos=1#
					if (pos>1)#
					{#
						rezago[j,s]=sum(tabla3[k-1+pos-1,3])#
					}#
					rezago[j,s]=rezago[j,s]-sum(rezago[j,-s])#
					if (pos>1)#
						k=k+1#
				}#
				s=s+1#
				k=k+1#
			}#
		}	#
		delaytable=rezago[l1:l,1:window]#
		return(list(delaytable=delaytable))#
}#
chowell_nowcasting<-function(delay,l_act=11)#
{#
	rezago=delay#
	Ntc=apply(rezago,1,sum)#
	nx=apply(rezago,2,sum)#
	Nx=nx#
	Nx[1]=sum(Ntc)-sum(nx[-1])#
	for(j in 2:length(nx))#
	{#
		Nx[j]=sum(Ntc[-((length(nx):(length(nx)-j+2)))])-sum(nx[-(1:j)])#
	}#
	gx=nx/Nx#
	gx1=1-gx#
	gx1[is.na(gx1)]=1#
	Nest=rep(0,length(nx))#
	for(j in 2:length(nx))#
	{#
		Nest[j]=Ntc[j]/prod(gx1[(length(nx):(length(nx)-j+2))]	)#
	}#
	variacion=Nest[length(Nest)]/Nest[length(Nest)-1]#
	variacion=rep(NA,length(nx)-1)#
	l2_act=trunc(l_act/7)#
	l3_act=l_act%%7/7#
	for(j in 3:length(nx))#
	{#
		variacion[j-1]=Nest[j]/Nest[j-1]-1#
	}#
	activos=rep(0,length(nx)-(l2_act))#
	for(j in (l2_act+2):length(nx))#
	{#
		activos[j-(l2_act)]=sum(Nest[j:(j-l2_act+1)])+l3_act*Nest[j-(l2_act)]#
	}#
	finmat=matrix(0,dim(rezago)[1]-1,3)#
	finmat[(dim(finmat)[1]-length(Nest)+1):dim(finmat)[1],]=cbind(round(Nest[-1]),round(variacion,2),activos)#
	return(list(chowell=finmat))#
}#
donker_nowcasting<-function(delay,l_act=11)#
{#
	rezago=delay#
	freq=apply(rezago,2,sum)#
	freq[which(freq<0)]=0#
	Ntc=apply(rezago,1,sum)#
	prob=freq/sum(freq)#
	prob1=cumsum(prob)#
	freq1=Ntc[length(Ntc):1]#
	Ndonk=round(freq1/prob1,0)#
	Ndonk=Ndonk[length(freq):1]	#
	variacion=Ndonk[length(Ndonk)]/Ndonk[length(Ndonk)-1]#
	variacion=rep(NA,length(Ndonk)-1)#
	l2_act=trunc(l_act/7)#
	l3_act=l_act%%7/7#
	for(j in 3:length(Ndonk))#
	{#
		variacion[j-1]=Ndonk[j]/Ndonk[j-1]-1#
	}#
	activos=rep(0,length(Ndonk)-(l2_act))#
	for(j in (l2_act+2):length(Ndonk))#
	{#
		activos[j-(l2_act)]=sum(Ndonk[j:(j-l2_act+1)])+l3_act*Ndonk[j-(l2_act)]#
	}#
	finmat=matrix(0,dim(rezago)[1]-1,3)#
	finmat[(dim(finmat)[1]-length(Ndonk)+1):dim(finmat)[1],]=cbind(round(Ndonk[-1]),round(variacion,2),activos)#
	return(list(donker=finmat))#
}#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/PaperNowcasting4")#
ftis0<-read.csv("ftiniciosintomas.txt",sep=";",header=T)#
ftcomuna<-read.csv("ftcomuna.txt",sep=";",header=T)#
pub=ftis0$fch_publicacion#
t0=table(pub)#
l0=length(names(t0))#
year=as.numeric(substr(ftis0$id_semanaepidemiologica, 1, 4))#
se=ftis0$id_semanaepidemiologica %% 100#
se[which(year==2021)]=se[which(year==2021)]+53#
ftis0$id_semanaepidemiologica2=ftis0$id_semanaepidemiologica#
ftis0$id_semanaepidemiologica2=se#
ftis0$id_semanaepidemiologica=ftis0$id_semanaepidemiologica2#
final=NULL#
for(m in 12:l0)#
{#
	print(m)#
	ftis=ftis0[which(ftis0$fch_publicacion<=names(t0)[m]),]#
	com=ftis0$id_comuna#
	t1=table(com)#
	l1=length(names(t1))#
	window=5#
	for(i in 1:l1)#
	{#
		tryCatch({#
		ftis2=ftis[which(ftis$id_comuna==names(t1)[i] & ftis$fch_inicio<=names(t0)[m]),]#
		ftis3=ftis2[which(ftis2$fch_publicacion==names(t0)[m]),]	#
ftcomuna2=ftcomuna[which(ftcomuna$id_comuna==names(t1)[i] & ftcomuna$fch_confirmado==names(t0)[m]),]	#
	a=ftis2$id_semanaepidemiologica#
	b=ftis2$fch_publicacion#
	e=ftis2$cant_casosconfirmados#
	f=ftis2$txt_comuna[1]#
	h=ftis2$id_region[1]#
	levels(a)=8:max(a)#
	#a=as.numeric(a)+7#
	year_se=rep(2020,length(a))#
	year_se[which(a>53)]=2021#
	a[which(a>53)]=a[which(a>53)]-53#
	y=prepare_data(e,b,a,year_se)#
	week=y$table$week#
	delay=y$table$delay#
	x=y$table$value#
	window=5#
	dt=delay_table(x,week,delay,window)#
	#print(dt)#
	chow=chowell_nowcasting(dt$delaytable)#
	#print(chow)#
	donk=donker_nowcasting(dt$delaytable)#
	#print(donk)#
	fechas=names(table(y$table$date))#
	fin=y$table[which(y$table$date==fechas[length(fechas)]),]#
	fin=fin[which(fin[,2]>0),]#
	real=fin[(dim(fin)[1]-window+2):dim(fin)[1],4]#
	nowfin=cbind(chow$chowell,donk$donker,real)#
	h=ftis3$id_region[1]#
pobc=sum(aggregate(cant_poblacioncomuna~id_comuna,ftis3,mean)[,2])#
	chow2=c(fin[1:(dim(fin)[1]-window+1),4]#
,chow$chowell[,1])#
	donk2=c(fin[1:(dim(fin)[1]-window+1),4]#
,donk$donker[,1])#
	varsem=c(NA,chow2[-1]/chow2[-length(chow2)]-1)#
	varsem[which(varsem==Inf)]=NA#
	varsem[is.na(varsem)]=NA#
	varsem2=c(NA,donk2[-1]/donk2[-length(donk2)]-1)#
	varsem2[which(varsem2==Inf)]=NA#
	varsem2[is.na(varsem2)]=NA#
	actchow=c(0,chow2[-1]+chow2[-length(chow2)])#
	actdonk=c(0,donk2[-1]+donk2[-length(donk2)])#
	pos=which(fin[,3]>=43)#
	actchow[pos]=round(chow2[pos]+(4/7)*chow2[pos-1],0)#
	actdonk[pos]=round(donk2[pos]+(4/7)*donk2[pos-1],0)#
	g1=ftcomuna2$cant_casosactivos#
	g2=rep(0,dim(fin)[1])#
	g2[length(g2)]=g1#
	final2=cbind(names(t0)[m],f,h,fin[,3],chow2,varsem,actchow,donk2,varsem2,actdonk,g2,fin[,4])#
final=rbind(final,final2)#
		}, error=function(e){})#
	}#
	print(table(final[,1]))#
}#
final=data.frame(fch_publicacion=final[,1],id_comuna=final[,2],id_region=final[,3],SemanaEpidemiologica=as.numeric(final[,4]),EstChowell=as.numeric(final[,5]),var_sem_Chowell=round(as.numeric(final[,6]),4),Nact_Chowell=as.numeric(final[,7]),EstDonker=as.numeric(final[,8]),var_sem_Donker=round(as.numeric(final[,9]),4),Nact_Donker=as.numeric(final[,10]),activos_informados=as.numeric(final[,11]),confirmados_informados=as.numeric(final[,12]))#
write.table(final,"ChowellDonkerPaper.txt",row.names=F)
require(animation)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/PaperNowcasting4")#
fchow<-read.csv("ChowellDonkerPaper.txt",sep=" ",header=T)#
ftis0<-read.csv("ftiniciosintomas.txt",sep=";",header=T)#
com=fchow$id_comuna#
tcom=table(com)#
l1=length(names(tcom))#
final=NULL
mse=matrix(0,l1,6)#
sub=matrix(0,l1,6)#
comunas=rep(0,l1)#
finfin=NULL
j=1
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])#
	fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]#
	activosud=matrix(0,p1-1,4)#
	for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)#
	p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}#
	fin=tabla[pos,]#
	fin=cbind(fin,activos)#
	tact=aggregate(tabla1$x, by=list(tabla1$Group.2), FUN=sum)#
	p1=length(table(fin[,1]))#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(fin[,1]==names(table(fin[,1]))[i])#
		pos[i]=t1[1]#
	}#
	fin2=fin[pos[-1],-c(5,9,10)]#
	tact2=tact[pos[-1],]#
	fechafin=aggregate(ftis0$id_semanaepidemiologica,list(ftis0$fch_fin),mean)[-c(1:13),]#
	fin3=cbind(names(tcom)[j],g[1],fin2,tact2[,2],fechafin[-dim(fechafin)[1],1],ultday[-c(1:4),c(5:6,10)])#
	names(fin3)=c("id_comuna","id_region","Semana Epidemiologica","Fecha Informe","Chowell","Donker","Confirmados Informados","Activos Chowell","Activos Donker","Activos Informados","Fecha Fin SE","Activos UltimaSemana","Confirmados Finales","Activos Finales")#
	pos0=which(fin3[,3]==25)#
	barplot(t(fin3[-pos0,c(10,8,9,14)]),col=1:4,main=f,ylab="",xlab="Semana Epidemiologica",names.arg=fin3[-pos0,3],beside=TRUE)#
	legend("topleft",c("Informados","Estimados Chowell","Estimados Donker","Finales"),col=1:4,cex=.8,lty=1)#
for(clm in 1:3)#
{#
	mse[j,clm]=mean((fin3[c(1:4,6:30),clm+4]-fin3[c(1:4,6:30),13])**2)	#
mse[j,clm+3]=mean((fin3[c(1:4,6:30),clm+7]-fin3[c(1:4,6:30),14])**2)#
sub[j,clm]=mean(na.omit(fin3[c(1:4,6:30),clm+4]/fin3[c(1:4,6:30),13]))	#
sub[j,clm+3]=mean(na.omit(fin3[c(1:4,6:30),clm+7]/fin3[c(1:4,6:30),14]))#
}#
#
	finfin=rbind(finfin,fin3)
v
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])
tabla
tail(tabla)
fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]#
	activosud=matrix(0,p1-1,4)#
	for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)#
	p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}#
	fin=tabla[pos,]#
	fin=cbind(fin,activos)#
	tact=aggregate(tabla1$x, by=list(tabla1$Group.2), FUN=sum)#
	p1=length(table(fin[,1]))#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(fin[,1]==names(table(fin[,1]))[i])#
		pos[i]=t1[1]#
	}#
	fin2=fin[pos[-1],-c(5,9,10)]#
	tact2=tact[pos[-1],]
fechafin=aggregate(ftis0$id_semanaepidemiologica,list(ftis0$fch_fin),mean)[-c(1:13),]#
	fin3=cbind(names(tcom)[j],g[1],fin2,tact2[,2],fechafin[-dim(fechafin)[1],1],ultday[-c(1:4),c(5:6,10)])
dim(fin2)
dim(tact2)
fim(fechafin)
dim(fechafin)
dim(ultday)
ultsay
ultday
head(ultday)
table(ultday[,1])
table(fin2[,1])
dim(fin2[,1])
dim(fin2)
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])#
	fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]
for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)
p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}
tabla
print(j)#
	fchow2=fchow[which(fchow$id_comuna==names(tcom)[j]),]	#
	comunas[j]=names(tcom)[j]#
	a=fchow2$fch_publicacion#
	b=fchow2$SemanaEpidemiologica#
	c=fchow2$EstChowell#
	c1=fchow2$EstDonker#
	d=fchow2$activos_informados#
	e=fchow2$confirmados_informados#
	f=names(tcom)[j]#
	g=fchow2$id_region#
	tabla=aggregate(c, by=list(b,a), FUN=sum)#
	tabla0=aggregate(c1, by=list(b,a), FUN=sum)#
	tabla1=aggregate(d, by=list(b,a), FUN=sum)#
	tabla2=aggregate(e, by=list(b,a), FUN=sum)#
	tabla=cbind(tabla,tabla0[,3],tabla1[,3],tabla2[,3])
dim(tabla)
fechault=names(table(tabla[,2]))#
	ultday2=tabla[which(tabla[,2]==fechault[length(fechault)]),]#
	ultday=ultday2[-1,]#
	p1=dim(ultday2)[1]#
	activosud=matrix(0,p1-1,4)#
	for(i in 2:p1)#
	{#
		if(ultday2[i,1]>=43)#
{			activosud[i-1,]=c(ultday2[i-1,3]*(4/7)+ultday2[i,3],ultday2[i-1,4]*(4/7)+ultday2[i,4],sum(ultday2[(i-1):i,5]),ultday2[i-1,6]*(4/7)+ultday2[i,6])#
}#
else#
{#
activosud[i-1,]=c(sum(ultday2[(i-1):i,3]),sum(ultday2[(i-1):i,4]),sum(ultday2[(i-1):i,5]),sum(ultday2[(i-1):i,6]))	#
}#
	}#
	ultday=cbind(ultday,activosud)#
	p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}#
	fin=tabla[pos,]#
	fin=cbind(fin,activos)#
	tact=aggregate(tabla1$x, by=list(tabla1$Group.2), FUN=sum)#
	p1=length(table(fin[,1]))#
	pos=rep(0,p1)
names(table(fin[,1]))
names(table(tabla[,2]))
pos=rep(0,p1)
head(tabla)
table(tabla[,1])
pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}
pos
p1
p1=lengxth(table(tabla[,2]))
p1=length(table(tabla[,2]))
p1
p1=length(table(tabla[,2]))#
	#Activos#
	activos=matrix(0,p1,4)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		t2=tabla[t1[(length(t1)-1):length(t1)],]#
		t3=t2#
		if(t3[2,1]>=43)#
			t3[1,c(3,4,6)]=(4/7)*t2[1,c(3,4,6)]#
		activos[i,]=c(sum(t3[,3]),sum(t3[,4]),sum(t3[,5]),sum(t3[,6]))#
	}#
	pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
	}
p1
pos
fin=tabla[pos,]
table(fin[,2])
table(fin[,1])
pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(as.Date(tabla[,2])==as.Date(names(table(tabla[,2])))[i])#
		pos[i]=t1[length(t1)]#
	}
pos
fin=tabla[pos,]
table(tabla[,1])
table(fin[,1])
fin
tail(fin)
i=1
names(table(tabla[,2]))[i]
t1=which(tabla[,2]==names(table(tabla[,2]))[i])
t1
tabla[t1,2]
tabla[t1,1]
t1[length(t1)]
pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
		print(c(i,pos[i],tabla[pos[i],1])))#
	}
pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
		print(c(i,pos[i],tabla[pos[i],1]))#
	}
i=124
t1=which(tabla[,2]==names(table(tabla[,2]))[i])
t1
tabla[t1,1]
i=69
names(table(tabla[,2]))
names(table(tabla[,2]))[i]
names(table(tabla[,2]))[i+1]
pos=rep(0,p1)#
	for(i in 1:p1)#
	{#
		t1=which(tabla[,2]==names(table(tabla[,2]))[i])#
		pos[i]=t1[length(t1)]#
		print(c(i,pos[i],tabla[pos[i],1]))#
	}
names(table(tabla[,2]))
tabla[pos,1:2]
table(fin[,1])
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("newftregion.txt",sep=";",header=T)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("newftregion.txt",sep=";",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
PCR<-read.csv("PCR.txt",sep=",",header=T)#
CasosNuevos<-read.csv("CasosNuevosCumulativo.txt",sep=",",header=T)#
UCI<-read.csv("UCI.txt",sep=",",header=T)#
CasosCS<-read.csv("CasosNuevosconSintomas.txt",sep=",",header=T)#
CasosSS<-read.csv("CasosNuevossinSintomas.txt",sep=",",header=T)#
Total<-read.csv("TotalesporRegion.txt",sep=",",header=T)#
antigeno<-Total[which(Total[,2]=="Casos nuevos confirmados por antigeno"),]#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
PCR1=PCR[pos[1:16],dim(PCR)[2]]#
antigeno1=antigeno[pos[1:16],dim(antigeno)[2]]#
Casos=CasosNuevos[pos,dim(CasosNuevos)[2]]#
Casos2=Casos-c(antigeno1,sum(antigeno1))#
UCI2=UCI[pos[1:16],dim(UCI)[2]]#
CS=CasosCS[pos,dim(CasosCS)[2]]#
SS=CasosSS[pos,dim(CasosSS)[2]]#
fechas=names(table(ftregion$fch_confirmado))#
ftr=ftregion[which(ftregion$fch_confirmado==fechas[length(fechas)]),]
fechas
ftr$fch_confirmado<-"2021-08-16"#
ftr$cant_casosconfirmadosdiario[1:17]<-Casos[c(17,1:16)]#
ftr$cant_casosconfirmadosdiario2<-ftr$cant_casosconfirmadosdiario#
ftr$cant_casosconfirmadosdiario2[1:17]<-Casos2[c(17,1:16)]#
ftr$cant_casosconfirmadosss[1:17]<-SS[c(17,1:16)]#
ftr$cant_casosconfirmadoscs[1:17]<-CS[c(17,1:16)]#
ftr$cant_casosconfirmados[1:17]<-ftr$cant_casosconfirmados[1:17]+Casos[c(17,1:16)]#
ftr$cant_casosconfirmados[18]=sum(ftr$cant_casosconfirmados[c(2,3,16)])#
ftr$cant_casosconfirmados[19]=sum(ftr$cant_casosconfirmados[c(4,5)])#
ftr$cant_casosconfirmados[20]=sum(ftr$cant_casosconfirmados[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmados[21]=sum(ftr$cant_casosconfirmados[c(10,11,15)])#
ftr$cant_casosconfirmados[22]=sum(ftr$cant_casosconfirmados[c(12,13)])#
ftr$cant_casosconfirmados[23]=sum(ftr$cant_casosconfirmados[c(2:13,15:17)])#
ftr$cant_casosconfirmadosdiario[18]=sum(ftr$cant_casosconfirmadosdiario[c(2,3,16)])#
ftr$cant_casosconfirmadosdiario[19]=sum(ftr$cant_casosconfirmadosdiario[c(4,5)])#
ftr$cant_casosconfirmadosdiario[20]=sum(ftr$cant_casosconfirmadosdiario[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadosdiario[21]=sum(ftr$cant_casosconfirmadosdiario[c(10,11,15)])#
ftr$cant_casosconfirmadosdiario[22]=sum(ftr$cant_casosconfirmadosdiario[c(12,13)])#
ftr$cant_casosconfirmadosdiario[23]=sum(ftr$cant_casosconfirmadosdiario[c(2:13,15:17)])#
ftr$cant_casosconfirmadosdiario2[18]=sum(ftr$cant_casosconfirmadosdiario2[c(2,3,16)])#
ftr$cant_casosconfirmadosdiario2[19]=sum(ftr$cant_casosconfirmadosdiario2[c(4,5)])#
ftr$cant_casosconfirmadosdiario2[20]=sum(ftr$cant_casosconfirmadosdiario2[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadosdiario2[21]=sum(ftr$cant_casosconfirmadosdiario2[c(10,11,15)])#
ftr$cant_casosconfirmadosdiario2[22]=sum(ftr$cant_casosconfirmadosdiario2[c(12,13)])#
ftr$cant_casosconfirmadosdiario2[23]=sum(ftr$cant_casosconfirmadosdiario2[c(2:13,15:17)])#
ftr$cant_casosconfirmadosss[18]=sum(ftr$cant_casosconfirmadosss[c(2,3,16)])#
ftr$cant_casosconfirmadosss[19]=sum(ftr$cant_casosconfirmadosss[c(4,5)])#
ftr$cant_casosconfirmadosss[20]=sum(ftr$cant_casosconfirmadosss[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadosss[21]=sum(ftr$cant_casosconfirmadosss[c(10,11,15)])#
ftr$cant_casosconfirmadosss[22]=sum(ftr$cant_casosconfirmadosss[c(12,13)])#
ftr$cant_casosconfirmadosss[23]=sum(ftr$cant_casosconfirmadosss[c(2:13,15:17)])#
ftr$cant_casosconfirmadoscs[18]=sum(ftr$cant_casosconfirmadoscs[c(2,3,16)])#
ftr$cant_casosconfirmadoscs[19]=sum(ftr$cant_casosconfirmadoscs[c(4,5)])#
ftr$cant_casosconfirmadoscs[20]=sum(ftr$cant_casosconfirmadoscs[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadoscs[21]=sum(ftr$cant_casosconfirmadoscs[c(10,11,15)])#
ftr$cant_casosconfirmadoscs[22]=sum(ftr$cant_casosconfirmadoscs[c(12,13)])#
ftr$cant_casosconfirmadoscs[23]=sum(ftr$cant_casosconfirmadoscs[c(2:13,15:17)])#
ftr$cant_pcr[1:17]=c(sum(PCR1),PCR1)#
ftr$cant_uci[1:17]=c(sum(UCI2),UCI2)#
ftr$cant_pcr[18]=sum(ftr$cant_pcr[c(2,3,16)])#
ftr$cant_pcr[19]=sum(ftr$cant_pcr[c(4,5)])#
ftr$cant_pcr[20]=sum(ftr$cant_pcr[c(6,7,8,9,14,17)])#
ftr$cant_pcr[21]=sum(ftr$cant_pcr[c(10,11,15)])#
ftr$cant_pcr[22]=sum(ftr$cant_pcr[c(12,13)])#
ftr$cant_pcr[23]=sum(ftr$cant_pcr[c(2:13,15:17)])#
ftr$cant_uci[18]=sum(ftr$cant_uci[c(2,3,16)])#
ftr$cant_uci[19]=sum(ftr$cant_uci[c(4,5)])#
ftr$cant_uci[20]=sum(ftr$cant_uci[c(6,7,8,9,14,17)])#
ftr$cant_uci[21]=sum(ftr$cant_uci[c(10,11,15)])#
ftr$cant_uci[22]=sum(ftr$cant_uci[c(12,13)])#
ftr$cant_uci[23]=sum(ftr$cant_uci[c(2:13,15:17)])#
ftr$porc_positividad=ftr$cant_casosconfirmadosdiario2/ftr$cant_pcr#
ftr=ftr[,-dim(ftr)[2]]#
ftregion2=rbind(ftregion,ftr)#
ftregion2=ftregion2[order(ftregion2$id_region),]#
fechas=names(table(ftregion2$fch_confirmado))#
print(ftregion2[which(ftregion2$fch_confirmado==fechas[length(fechas)]),]$cant_casosconfirmadosdiario)#
#ftregion2[which(ftregion2$fch_confirmado==fechas[length(fechas)-5]),]$cant_uci=c(1272,43,80,6,25,97,55,77,173,65,69,6,12,493,16,18,37,18+43+80,6+25,97+493+55+77+37+173,65+16+69,6+12,1272-493)#
write.table(ftregion2,"newftregion.txt",row.names=F)
ftregion<-read.csv("newftregion.txt",sep="",header=T)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/")
source("scriptfunciones.R")
fechas=names(table(ftregion$fch_confirmado))#
ftr1=ftregion[which(ftregion$fch_confirmado==fechas[length(fechas)]),]#
ftr=ftregion#
hs=hspline(ftr$id_region,ftr$cant_casosconfirmadosdiario,ftr$cant_pcr,ftr$porc_positividad,ftr$txt_nombreregion,ftr$fch_confirmado)#
a=ftr$id_region#
pos1=which(a==0)#
p1=names(table(a))#
for(i in 1:length(p1))#
{#
    print(i)#
    pos1=which(a==p1[i])#
    hs1=hs[,i+2]#
    print(tail(ftr$porc_roslmp[pos1]-hs1))#
    ftr$porc_roslmp[pos1]<-hs1#
    hs1=hs[,i+25]#
    ftr$porc_deroslmp[pos1]<-hs1#
}#
hr1<-hrefectivo(ftr$id_region,ftr$cant_casosconfirmadosdiario,ftr$cant_pcr,ftr$porc_positividad,ftr$txt_nombreregion,ftr$fch_confirmado)#
a=ftr$id_region#
pos1=which(a==0)#
p1=names(table(a))#
for(i in 1:length(p1))#
{#
    print(i)#
    pos1=which(a==p1[i])#
    pos1=pos1[-c(1:7)]#
    hs11=hr1[,i+1]#
    print(tail(ftr$porc_roefectivo[pos1]-hs11))#
    ftr$porc_roefectivo[pos1]<-hs11#
    hs11=hr1[,i+24]#
    ftr$porc_deroefectivo[pos1]<-hs11#
}#
#
clus=hclusterseguimiento(ftr$id_region,ftr$txt_nombreregion,ftr$cant_casosconfirmadosdiario,ftr$cant_poblacion,ftr$porc_roslmp,ftr$fch_confirmado,ftr$porc_deroslmp,ftr$porc_deroefectivo,ftr$porc_roefectivo)#
a=ftr$id_region#
for(i in 1:16)#
{#
    print(i)#
    pos2=which(clus[,2]==i)#
    pos1=which(a==i)#
    pos1=pos1[-c(1:57)]#
    hs11=clus[pos2,6]#
    print(tail(ftr$num_cluster[pos1]-hs11))#
    ftr$num_cluster[pos1]<-hs11#
    hs11=clus[pos2,3]#
    ftr$porc_meanpositiverate[pos1]<-hs11#
    hs11=clus[pos2,4]#
    ftr$num_meanrcori[pos1]<-hs11#
    hs11=clus[pos2,5]#
    ftr$num_tasaconfirmadosch[pos1]<-hs11#
}
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")
ftis<-read.csv("ftiniciosintomas2.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/")
ftis<-read.csv("ftiniciosintomas2.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
hclusterchowell<-hclusterchowell(ftr,ftis)
ftr[which(ftr$fch_confirmado==fechas[length(fechas)])[2:17],]$num_clustermod2=hclusterchowell[,8]
write.table(ftr,"newftregion.txt",row.names=F,sep=";")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
ftcomuna<-read.csv("newftcomuna.txt",sep=";",header=T)#
#ftcomuna<-ftcomuna[-c(which(ftcomuna$fch_confirmado=="2021-09-06")),]#
names(ftcomuna)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
casoscom<-read.csv("Covid-19.txt",sep=",",header=T)#
casosact<-read.csv("CasosActivosPorComuna.txt",sep=",",header=T)#
fechas=names(table(ftcomuna$fch_confirmado))#
ftr=ftcomuna[which(ftcomuna$fch_confirmado==fechas[length(fechas)]),]
fechas
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
ftcomuna<-read.csv("newftcomuna.txt",sep=";",header=T)#
#ftcomuna<-ftcomuna[-c(which(ftcomuna$fch_confirmado=="2021-09-06")),]#
names(ftcomuna)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
casoscom<-read.csv("Covid-19.txt",sep=",",header=T)#
casosact<-read.csv("CasosActivosPorComuna.txt",sep=",",header=T)#
fechas=names(table(ftcomuna$fch_confirmado))#
ftr=ftcomuna[which(ftcomuna$fch_confirmado==fechas[length(fechas)]),]#
ftr$fch_confirmado<-"2021-09-17"#
pos=rep(0,dim(ftr)[1])#
pos2=rep(0,dim(ftr)[1])#
for(i in 1:length(pos))#
{#
        pos[i]=which(ftr$id_comuna[i]==casoscom$Codigo.comuna)#
       pos2[i]=which(ftr$id_comuna[i]==casosact$Codigo.comuna)#
}#
l0=dim(casoscom)[2]#
cc=casoscom[pos,]#
ca=casosact[pos2,]#
l0=dim(casosact)[2]#
table(ftr$id_comuna==cc$Codigo.comuna)#
table(ftr$id_comuna==ca$Codigo.comuna)#
cc1=cc[,dim(cc)[2]-1]#
cc2=cc[,dim(cc)[2]-2]#
ca1=ca[,dim(ca)[2]]#
casosnuevos=cc1-cc2#
ftr$cant_casosconfirmados=cc1#
ftr$cant_casosactivos=ca1#
ftcomuna2=rbind(ftcomuna,ftr)#
fechas=names(table(ftcomuna2$fch_confirmado))#
print(sum(ftcomuna2[which(ftcomuna2$fch_confirmado==fechas[length(fechas)]),]$cant_casosconfirmados))#
write.table(ftcomuna2,"newftcomuna.txt",row.names=F)#
ftcomuna<-read.csv("newftcomuna.txt",sep="",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid")#
source("scriptfunciones.R")#
hrcoricomunal<-hrcoricomunal(ftcomuna$fch_confirmado,ftcomuna$cant_casosconfirmados,ftcomuna$id_comuna)#
a=ftcomuna$id_comuna#
p1=names(table(a))#
for(i in 1:length(p1))#
{#
    print(i)#
    pos1=which(a==p1[i])#
    pos1=pos1[-c(1:4)]#
    ftc=ftcomuna[pos1,]#
    pos2=which(hrcoricomunal$comuna==p1[i])#
    hs11=hrcoricomunal[pos2,]#
    ftcomuna[pos1,]$porc_rcori<-hs11$dataF#
    ftcomuna[pos1,]$porc_dercori<-hs11$dataF2#
}#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
write.table(ftcomuna,"newftcomuna.txt",row.names=F,sep=";")
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivocom")#
require("shiny")#
require("shinyWidgets")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivocom", appName = "recom",#
          appTitle = "recom")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/MapaComunas")#
require("shiny")#
require("shinyWidgets")#
require("shinydashboard")#
require("RColorBrewer")#
require("formattable")#
require(ggplot2)#
library(chilemapas)#
library(tidyverse)#
require(gridExtra)#
require(dplyr)#
library(scales)#
require(reshape2)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvep-usach',#
			  token='37DEB6B514C6E6B9FB83459DAB073A4B',#
			  secret='RC4Vyj0gG5BvCyjDUw3jYdfsuQd9AT3+vaUOyzqH')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/MapaComunas", appName = "mapacomunal",account = "gemvep-usach")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/VisualizadorRegional")#
require("shiny")#
require("shinydashboard")#
require("RColorBrewer")#
require(ggplot2)#
require(gridExtra)#
library(scales)#
require(reshape2)#
require(ggrepel)#
require("stringr")#
require("shinyWidgets")#
require("formattable")#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvepusach', token='71D8A873648E2676F1EE3401A7BA7C81', secret='Ideg8Rh3QroO1R2tEOmp9h7wI4GFIlbiga4Wscap')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/VisualizadorRegional", appName = "visualizadorregional",account = "gemvepusach")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/MapaComunas")#
require("shiny")#
require("shinyWidgets")#
require("shinydashboard")#
require("RColorBrewer")#
require("formattable")#
require(ggplot2)#
library(chilemapas)#
library(tidyverse)#
require(gridExtra)#
require(dplyr)#
library(scales)#
require(reshape2)#
source("ui.R")#
source("server.R")
require(ggplot2)#
library(gridExtra)#
library(RColorBrewer)#
library(shinydashboard)#
library(chilemapas)#
library(tidyverse)#
require(gridExtra)#
require(dplyr)#
require("RColorBrewer")#
require("shinydashboard")#
require("shinyWidgets")#
library(scales)#
require(reshape2)#
require("formattable")
region="Nacional"
provincia=0
date="2021-09-17"
index="Tasa de Incidencia Semanal"
regiones=c("Nacional","Arica","Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","R.Metropolitana","OHiggins","Maule","Nuble","Bio-Bio","Araucania","Los Rios","Los Lagos","Aysen","Magallanes","Norte Grande","Norte Chico","Zona Central","Zona Sur","Zona Austral","Regiones")#
idregion=c(0,15,1:5,13,6:7,16,8:9,14,10:12,50:55)#
idregion0=c("0","15","01","02","03","04","05","13","06","07","16","08","09","14","10","11","12")#
idr=idregion[which(region==regiones)]#
idr0=idregion0[which(region==regiones)]#
idr2=idr#
idr20=idr0#
ftcomuna=read.csv("ftcomuna.txt",sep=";",header=T)#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
contacto<-read.csv("ContactoUnion.txt",sep=";",header=T)#
pasoapaso<-read.csv("paso_a_paso.txt",sep=",",header=T)#
posit<-read.csv("PositividadPorComuna.txt",sep=",",header=T)#
reduce<-read.csv("Reducedftis.txt",sep=" ",header=T)#
	if(idr==0)#
	 r13 <- dplyr::filter(chilemapas::mapa_comunas)#
    if(idr>0){#
        r13 <- dplyr::filter(chilemapas::mapa_comunas, codigo_region %in% idr0 & (codigo_comuna != "05201"  & codigo_comuna != "05104"))#
ftcomuna=ftcomuna[which(ftcomuna$id_region==idr),]#
contacto=contacto[which(contacto[,1] == idr),]#
reduce=reduce[which(reduce$id_region == idr),]#
pasoapaso=pasoapaso[which(pasoapaso$codigo_region==idr),]#
posit=posit[which(posit$Codigo.region==idr),]#
        }#
        if(idr==0)#
      r13 <- dplyr::filter(chilemapas::mapa_comunas)#
n0=names(table(pasoapaso$codigo_comuna))#
if(index=="Estado de Confinamiento" | index=="Dias Totales en Cuarentena" | index=="Dias desde ultima Cuarentena" )#
{#
	i=1#
while(i<=length(n0))#
{	#
a=which(as.numeric(pasoapaso$codigo_comuna)==as.numeric(n0[i]))#
pos=length(a)#
	if(pos>1)#
	{#
		aux=pasoapaso[a,-c(1:5)]#
		aux2=apply(aux,2,min)#
		pasoapaso[a[1],-c(1:5)]=aux2#
		pasoapaso=pasoapaso[-c(a[2:length(a)]),]#
	}#
	i=i+1		#
}#
df_transpose <- data.frame(t(pasoapaso[,-c(1:5)]))#
nombres=row.names(df_transpose)#
n2=unlist(strsplit(nombres,"X"))#
n2=n2[-which(n2=="")]#
n2=gsub(".", "-", n2, fixed = TRUE)#
n2=as.Date(as.character(n2))#
pasoapaso2=df_transpose[which(as.Date(n2)==(as.Date(date))),]#
pasoapaso3=df_transpose[which(as.Date(n2)<=(as.Date(date))),]#
names(pasoapaso2)=pasoapaso$codigo_comuna#
diasadd=0#
if(max(as.Date(n2))<(as.Date(date)))#
diasadd=as.numeric(as.Date(date)-max(as.Date(n2)))#
names(pasoapaso3)=pasoapaso$codigo_comuna#
pasoapaso4=t(pasoapaso3)#
pasoapaso0=as.matrix(pasoapaso4)#
pasoapaso0[which(pasoapaso0>1)]=0#
h1=apply(pasoapaso0,1,function(x){tail(which(x==0),1)+1})#
h1[which(h1>dim(pasoapaso0)[2])]=0#
H=matrix(0,dim(pasoapaso0)[2],dim(pasoapaso0)[1])#
posi=(0:(dim(pasoapaso0)[1]-1))*dim(pasoapaso0)[2]+as.numeric(h1)#
len0=length(which(h1==0))#
if(len0>0)#
	posi=posi[-c(which(h1==0))]#
H[posi]=1#
H=t(H)#
dias=apply(H,1,function(x){length(x)-which(x==1)[1]})+diasadd#
dias[is.na(dias)]=0#
#ftcomuna5=ftcomuna[which(as.Date(ftcomuna$fch_confirmado)<"2020-07-28"),]#
#t0=aggregate(fch_confirmado~id_comuna+txt_cuarentenaactiva,ftcomuna6,min)#
#t1=aggregate(fch_confirmado~id_comuna+txt_cuarentenaactiva,ftcomuna6,max)#
cuarentena=apply(pasoapaso0,1,sum)+diasadd#
idcom=as.numeric(names(pasoapaso2))#
cuarentena=cuarentena[order(idcom)]#+as.numeric(t0)#
dias=dias[order(idcom)]#
pasoapaso2=pasoapaso2[order(idcom)]#
idcom=as.character(idcom[order(idcom)])#
#print(idcom==names(t0))#
}#
if(index=="Tasa de Positividad")#
{#
df_transpose <- data.frame(t(posit[,-c(1:5)]))#
nombres=row.names(df_transpose)#
n2=unlist(strsplit(nombres,"X"))#
n2=n2[-which(n2=="")]#
n2=gsub(".", "-", n2, fixed = TRUE)#
n2=as.Date(as.character(n2))#
n0=n2[which(as.Date(n2)<=(as.Date(date)))]#
posit2=df_transpose[which(as.Date(n2)==(as.Date(max(n0)))),]#
names(posit2)=posit$Codigo.comuna#
idcom=as.numeric(names(posit2))#
posit2=posit2[order(idcom)]#
idcom=as.character(idcom[order(idcom)])#
}#
if(index=="Razon de Contacto por Caso"|index=="Casos por SE de Inicio de Sintomas"|index=="Tasa de Casos Activos")#
{#
SE=as.numeric(str_remove(ftregion$txt_semanaepidemiologica,"SE"))#
year=as.numeric(substr(SE, 1, 4))#
se=SE %% 100#
se[which(year==2021)]=se[which(year==2021)]+53#
SE=se#
SE0=max(na.omit(SE))#
SE2=max(SE[which(ftregion$fch_confirmado==date)])-1#
SE3=ftregion$txt_semanaepidemiologica[which(SE==SE2)][1]#
reduce2=reduce[which(reduce$id_semanaepidemiologica==SE3),]#
reduce3=reduce[which(reduce$id_semanaepidemiologica==SE3-1),]#
reduce4=reduce[which(reduce$id_semanaepidemiologica==SE3-2),]#
if(sum(reduce3$cant_casosconfirmadoschowellw5)==0){#
reduce2$cant_casosconfirmadoschowellw5=reduce2$cant_casosconfirmados#
	  reduce3$cant_casosconfirmadoschowellw5=reduce3$cant_casosconfirmados#
}#
if(sum(reduce4$cant_casosconfirmadoschowellw5)==0){#
	  reduce4$cant_casosconfirmadoschowellw5=reduce4$cant_casosconfirmados#
}#
#
reduce2$cant_casosactivos=reduce3$cant_casosconfirmadoschowellw5+4/7*reduce4$cant_casosconfirmadoschowellw5#
if(SE2<=43)#
reduce2$cant_casosactivos=reduce3$cant_casosconfirmadoschowellw5+reduce4$cant_casosconfirmadoschowellw5#
idcom=as.numeric(reduce2$id_comuna)#
reduce2=reduce2[order(idcom),]#
idcom=as.character(idcom[order(idcom)])#
contacto2=contacto[which(contacto[,9]==SE2),]#
ratio=as.numeric(as.character(contacto2[,7]))/as.numeric(as.character(contacto2[,6]))#
}#
if(as.numeric(provincia)>0){#
        	r13 <- dplyr::filter(chilemapas::mapa_comunas, codigo_provincia %in% c(paste(idr0,provincia,sep="")) & (codigo_comuna !="05201" & codigo_comuna !="05104"))#
        	if(idr==13 & provincia==1)#
        r13 <- dplyr::filter(chilemapas::mapa_comunas, codigo_provincia %in% c(paste(idr0,provincia,sep="")) | codigo_comuna %in% c("13201","13401"))#
        }#
ftcomuna0=ftcomuna[which(as.Date(ftcomuna$fch_confirmado)<=date),]#
ftcomuna2=ftcomuna[which(as.Date(ftcomuna$fch_confirmado)==max(as.Date(ftcomuna0$fch_confirmado))),]#
ftcomuna3=ftcomuna[which(as.Date(ftcomuna$fch_confirmado)==max(as.Date(ftcomuna0$fch_confirmado))-7),]#
ftcomuna4=ftcomuna[which(as.Date(ftcomuna$fch_confirmado)==max(as.Date(ftcomuna0$fch_confirmado))-14),]#
    nombres=r13$codigo_comuna#
if(index=="Tasa de Incidencia Acumulada" | index=="Tasa de Incidencia Semanal" | index=="Variacion de Incidencia Semanal")    #
    idcom=ftcomuna2$id_comuna#
    idcom0=ftcomuna2$id_comuna#
    idcom1=idcom#
    if(idr>0 & idr<10){#
    idcom1=paste(idr0,substr(idcom,2,4),sep="")#
    }#
    if(idr==0){#
    	p0=1:206#
    idcom1[p0]=paste(idr0,substr(idcom[p0],1,4),sep="")}#
    p3=rep(0,length(nombres))#
    p4=rep(0,length(nombres))#
    for(i in 1:length(p3))#
    {#
    	    p3[i]=which(idcom1 == nombres[i])#
    	    p4[i]=which(idcom0 == idcom[p3[i]])#
    }#
    if(index=="Casos por SE de Inicio de Sintomas")#
    {#
      p2=(reduce2$cant_casosconfirmadoschowellw5[p3]/reduce2$cant_poblacioncomuna[p3])*100000#
    }#
    if(index=="Tasa de Casos Activos")#
    {#
      p2=(reduce2$cant_casosactivos[p3]/reduce2$cant_poblacioncomuna[p3])*100000#
    }#
    if(index=="Tasa de Incidencia Acumulada")#
    {#
    p2=(ftcomuna2$cant_casosconfirmados[p3]/ftcomuna2$cant_poblacioncomuna[p3])*100000#
    }#
    if(index=="Estado de Confinamiento")#
    {#
      p2=as.numeric(pasoapaso2[p3])#
    }#
    if(index=="Dias Totales en Cuarentena")#
    {#
      p2=as.numeric(cuarentena[p3])#
    }#
     if(index=="Dias desde ultima Cuarentena")#
    {#
      p2=as.numeric(dias[p3])#
    }#
    if(index=="Tasa de Positividad")#
    {#
      p2=as.numeric(posit2[p3])#
    }#
    if(index=="Tasa de Incidencia Semanal")#
    {#
    	casos=ftcomuna2$cant_casosconfirmados[p3]-ftcomuna3$cant_casosconfirmados[p3]#
    	p22=which(casos<0)#
    	if(length(p22)>0)#
    		casos[p22]=0#
    	p2=(casos/ftcomuna2$cant_poblacioncomuna[p3])*100000  #
    	}#
    if(index=="Variacion de Incidencia Semanal")#
    {#
 casos=ftcomuna2$cant_casosconfirmados[p3]-ftcomuna3$cant_casosconfirmados[p3]#
  casos2=ftcomuna3$cant_casosconfirmados[p3]-ftcomuna4$cant_casosconfirmados[p3]#
    	p2=(casos/casos2-1)*100#
    	p2=ifelse(p2==Inf,0,p2)  #
    	}#
    nombres2=ftcomuna2$txt_comuna[p4]#
    #if(index=="Estado de Confinamiento")#
    #p2[which(nombres2 %in% c("Maipu","Cerrillos","Santiago","Independencia","Macul"))]=1#
 fin=data.frame(Comuna=nombres2,Indicador=p2) #
 fin2=fin[order(p2,decreasing=T)[1:min(dim(fin)[1],20)],]#
 row.names(fin2)=NULL
head(fin2)
date
head(fin2,10)
dim(ftcomuna2)
dim(ftcomuna3)
dim(ftcomuna4)
casos=ftcomuna2$cant_casosconfirmados[p3]-ftcomuna3$cant_casosconfirmados[p3]
summary(casos)
table(ftcomuna2$fch_publicacion)
table(ftcomuna2$fch_confirmado)
table(ftcomuna3$fch_confirmado)
sum(ftcomuna2$cant_casosconfimados)
sum(ftcomuna3$cant_casosconfimados)
sum(ftcomuna3$cant_casosconfirmados)
sum(ftcomuna2$cant_casosconfirmados)
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/DatosComunales")#
require("shiny")#
require("shinydashboard")#
require("shinyWidgets")#
require("RColorBrewer")#
library("rtweet")#
library("shinyscreenshot")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
library(httr)#
#access1="1268970839078289408-vFmbUZY1VHrbXSV4KuEwfyyDtw8K1a"#
#access2="WdkU7NLhVwZfiAqju2gAhx4pZwmLrwTV3nMLo1LO9SZkz"#
#url <- get_authorization_url(app, "http://127.0.0.1:1410")#
#a(href = url, "Authorize this app")#
#token <- create_token(app = "datoscomunales",consumer_key = api_key,consumer_secret = api_secret_key,access_token = access1, access_secret = access2)#
#token <- create_token(app = "datoscomunales",consumer_key = api_key,consumer_secret = api_secret_key)#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvep-usach',#
			  token='37DEB6B514C6E6B9FB83459DAB073A4B',#
			  secret='RC4Vyj0gG5BvCyjDUw3jYdfsuQd9AT3+vaUOyzqH')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/DatosComunales", appName = "datoscomunales",account = "gemvep-usach")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
names(data)=c('namefile','class','freq','freq2','phiR','phiI','Mod','phi','theta','se_theta','pv_theta','IARMAphi','IARMAtheta','se_IARMAphi','se_IARMAtheta','pv_IARMAphi','pv_IARMAtheta','phiR2','phiI2','phi2','meandiff','meandiff2','phiR_f2','phiI_f2','Mod_f2','phi_f2','theta_f2','se_theta_f2','pv_theta_f2','IARMAphi_f2','IARMAtheta_f2','se_IARMAphi_f2','se_IARMAtheta_f2','pv_IARMAphi_f2','pv_IARMAtheta_f2','phiR2_f2','phiI2_f2','phi2_f2','meandiff_f2','meandiff2_f2',"MSE_data","MSE_iAR","MSE_CIAR","MSE_iMA","MSE_iARMA","BL_data","BL_iAR","BL_CIAR","BL_iMA","BL_iARMA","MSE_data2","MSE_iAR2","MSE_CIAR2","MSE_iMA2","MSE_iARMA2","BL_data2","BL_iAR2","BL_CIAR2","BL_iMA2","BL_iARMA2")#
alpha=0.1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
data[which(is.na(data$pv_IARMAphi) & data$IARMAphi==0.01),]$pv_IARMAphi=1#
data[which(is.na(data$pv_IARMAtheta) & data$IARMAtheta==0.01),]$pv_IARMAtheta=1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
require(xtable)#
f1=rep("Other",dim(data)[1])#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta>alpha)]="iAR"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta<alpha)]="iMA"#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta<alpha)]="iARMA"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta>alpha)]="Non-iARMA"#
f1[which(f1=="Non-iARMA" & data$theta<0 & data$pv_theta<alpha)]="Negative iMA"#
f1[which(f1=="Non-iARMA" & data$phiR2<0 & (data$MSE_data<data$MSE_CIAR))]="CiAR"#
f1[which(f1=="Non-iARMA" & data$BL_iARMA<alpha)]="White Noise"#
table(f1)#
p1=round(table(f1)/dim(data)[1]*100,0)#
t1=table(f1)#
tc=table(f1,data$class)#
tc1=t(tc)/as.numeric(apply(tc,2,sum))#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other")]#
t1=table(f11)#
data2=data[which(f1!="Other"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other" & f1!="Non-iARMA")]#
t1=table(f11)#
data2=data[which(f1!="Other" & f1!="Non-iARMA"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
names(data)=c('namefile','class','freq','freq2','phiR','phiI','Mod','phi','theta','se_theta','pv_theta','IARMAphi','IARMAtheta','se_IARMAphi','se_IARMAtheta','pv_IARMAphi','pv_IARMAtheta','phiR2','phiI2','phi2','meandiff','meandiff2','phiR_f2','phiI_f2','Mod_f2','phi_f2','theta_f2','se_theta_f2','pv_theta_f2','IARMAphi_f2','IARMAtheta_f2','se_IARMAphi_f2','se_IARMAtheta_f2','pv_IARMAphi_f2','pv_IARMAtheta_f2','phiR2_f2','phiI2_f2','phi2_f2','meandiff_f2','meandiff2_f2',"MSE_data","MSE_iAR","MSE_CIAR","MSE_iMA","MSE_iARMA","BL_data","BL_iAR","BL_CIAR","BL_iMA","BL_iARMA","MSE_data2","MSE_iAR2","MSE_CIAR2","MSE_iMA2","MSE_iARMA2","BL_data2","BL_iAR2","BL_CIAR2","BL_iMA2","BL_iARMA2")#
alpha=0.1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
data[which(is.na(data$pv_IARMAphi) & data$IARMAphi==0.01),]$pv_IARMAphi=1#
data[which(is.na(data$pv_IARMAtheta) & data$IARMAtheta==0.01),]$pv_IARMAtheta=1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
require(xtable)#
f1=rep("Other",dim(data)[1])#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta>alpha)]="iAR"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta<alpha)]="iMA"#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta<alpha)]="iARMA"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta>alpha)]="Non-iARMA"#
f1[which(f1=="Non-iARMA" & data$theta<0 & data$pv_theta<alpha)]="Negative iMA"#
f1[which(f1=="Non-iARMA" & data$phiR2<0 & (data$MSE_data<data$MSE_CIAR))]="CiAR"#
f1[which(f1=="Non-iARMA" & data$BL_iARMA<alpha)]="White Noise"#
table(f1)#
p1=round(table(f1)/dim(data)[1]*100,0)#
t1=table(f1)#
tc=table(f1,data$class)#
tc1=t(tc)/as.numeric(apply(tc,2,sum))#
xtable(cbind(t1,paste(p1,"%")),digits=0)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
names(data)=c('namefile','class','freq','freq2','phiR','phiI','Mod','phi','theta','se_theta','pv_theta','IARMAphi','IARMAtheta','se_IARMAphi','se_IARMAtheta','pv_IARMAphi','pv_IARMAtheta','phiR2','phiI2','phi2','meandiff','meandiff2','phiR_f2','phiI_f2','Mod_f2','phi_f2','theta_f2','se_theta_f2','pv_theta_f2','IARMAphi_f2','IARMAtheta_f2','se_IARMAphi_f2','se_IARMAtheta_f2','pv_IARMAphi_f2','pv_IARMAtheta_f2','phiR2_f2','phiI2_f2','phi2_f2','meandiff_f2','meandiff2_f2',"MSE_data","MSE_iAR","MSE_CIAR","MSE_iMA","MSE_iARMA","BL_data","BL_iAR","BL_CIAR","BL_iMA","BL_iARMA","MSE_data2","MSE_iAR2","MSE_CIAR2","MSE_iMA2","MSE_iARMA2","BL_data2","BL_iAR2","BL_CIAR2","BL_iMA2","BL_iARMA2")#
alpha=0.1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
data[which(is.na(data$pv_IARMAphi) & data$IARMAphi==0.01),]$pv_IARMAphi=1#
data[which(is.na(data$pv_IARMAtheta) & data$IARMAtheta==0.01),]$pv_IARMAtheta=1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
require(xtable)#
f1=rep("Other",dim(data)[1])#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta>alpha)]="iAR"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta<alpha)]="iMA"#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta<alpha)]="iARMA"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta>alpha)]="Non-iARMA"#
f1[which(f1=="Non-iARMA" & data$theta<0 & data$pv_theta<alpha)]="Negative iMA"#
f1[which(f1=="Non-iARMA" & data$phiR2<0 & (data$MSE_data<data$MSE_CIAR))]="CiAR"#
f1[which(f1=="Non-iARMA" & data$BL_iARMA>alpha)]="White Noise"#
table(f1)#
p1=round(table(f1)/dim(data)[1]*100,0)#
t1=table(f1)#
tc=table(f1,data$class)#
tc1=t(tc)/as.numeric(apply(tc,2,sum))#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other")]#
t1=table(f11)#
data2=data[which(f1!="Other"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other" & f1!="Non-iARMA")]#
t1=table(f11)#
data2=data[which(f1!="Other" & f1!="Non-iARMA"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
names(data)=c('namefile','class','freq','freq2','phiR','phiI','Mod','phi','theta','se_theta','pv_theta','IARMAphi','IARMAtheta','se_IARMAphi','se_IARMAtheta','pv_IARMAphi','pv_IARMAtheta','phiR2','phiI2','phi2','meandiff','meandiff2','phiR_f2','phiI_f2','Mod_f2','phi_f2','theta_f2','se_theta_f2','pv_theta_f2','IARMAphi_f2','IARMAtheta_f2','se_IARMAphi_f2','se_IARMAtheta_f2','pv_IARMAphi_f2','pv_IARMAtheta_f2','phiR2_f2','phiI2_f2','phi2_f2','meandiff_f2','meandiff2_f2',"MSE_data","MSE_iAR","MSE_CIAR","MSE_iMA","MSE_iARMA","BL_data","BL_iAR","BL_CIAR","BL_iMA","BL_iARMA","MSE_data2","MSE_iAR2","MSE_CIAR2","MSE_iMA2","MSE_iARMA2","BL_data2","BL_iAR2","BL_CIAR2","BL_iMA2","BL_iARMA2")#
alpha=0.1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
data[which(is.na(data$pv_IARMAphi) & data$IARMAphi==0.01),]$pv_IARMAphi=1#
data[which(is.na(data$pv_IARMAtheta) & data$IARMAtheta==0.01),]$pv_IARMAtheta=1#
dim(data[which(is.na(data$pv_IARMAtheta)),])#
require(xtable)#
f1=rep("Other",dim(data)[1])#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta>alpha)]="iAR"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta<alpha)]="iMA"#
f1[which(data$pv_IARMAphi<alpha & data$pv_IARMAtheta<alpha)]="iARMA"#
f1[which(data$pv_IARMAphi>alpha & data$pv_IARMAtheta>alpha)]="Non-iARMA"#
f1[which(f1=="Non-iARMA" & data$theta<0 & data$pv_theta<alpha)]="Negative iMA"#
f1[which(f1=="Non-iARMA" & data$phiR2<0 & (data$MSE_data<data$MSE_CIAR))]="CiAR"#
f1[which(f1=="Non-iARMA" & data$BL_iARMA>alpha)]="White Noise"#
table(f1)#
p1=round(table(f1)/dim(data)[1]*100,0)#
t1=table(f1)#
tc=table(f1,data$class)#
tc1=t(tc)/as.numeric(apply(tc,2,sum))#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other")]#
t1=table(f11)#
data2=data[which(f1!="Other"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)
sum(t1)
1171-64
p1=round(table(f1)/dim(data)[1]*100,0)#
t1=table(f1)#
tc=table(f1,data$class)#
tc1=t(tc)/as.numeric(apply(tc,2,sum))#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other")]#
t1=table(f11)#
data2=data[which(f1!="Other"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)#
f11=f1[which(f1!="Other" & f1!="Non-iARMA")]#
t1=table(f11)#
data2=data[which(f1!="Other" & f1!="Non-iARMA"),]#
p1=round(table(f11)/dim(data2)[1]*100,0)#
xtable(cbind(t1,paste(p1,"%")),digits=0)
sum(f11)
f11
sum(t1)
library(readr)  #
library(dplyr)   #
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Fallecimientos")#
#------Lectura base defunciones 2016-2021------#
defunciones <- read_delim("DEFUNCIONES_FUENTE_DEIS.csv", #
                          ";", escape_double = FALSE, col_names = FALSE, #
                          locale = locale(encoding = "ISO-8859-1"), #
                          trim_ws = TRUE)#
#----Arreglar base original----#
names (defunciones)[1]="ANO_DEF"  #
names (defunciones)[2]="FECHA_DEF"#
names (defunciones)[3]="GLOSA_SEXO"  #
names (defunciones)[4]="EDAD_TIPO"  #
names (defunciones)[5]="EDAD_CANT"#
names (defunciones)[6]="CODIGO_COMUNA_RESIDENCIA"  #
names (defunciones)[7]="GLOSA_COMUNA_RESIDENCIA"  #
names (defunciones)[8]="GLOSA_REG_RES"  #
names (defunciones)[9]="DIAG1"  #
names (defunciones)[10]="CAPITULO_DIAG1"  #
names (defunciones)[11]="GLOSA_CAPITULO_DIAG1"  #
names (defunciones)[12]="CODIGO_GRUPO_DIAG1"  #
names (defunciones)[13]="GLOSA_GRUPO_DIAG1"  #
names (defunciones)[14]="CODIGO_CATEGORIA_DIAG1"  #
names (defunciones)[15]="GLOSA_CATEGORIA_DIAG1"  #
names (defunciones)[16]="CODIGO_SUBCATEGORIA_DIAG1"  #
names (defunciones)[17]="GLOSA_SUBCATEGORIA_DIAG1"  #
defunciones$FECHA_DEF<-as.Date(defunciones$FECHA_DEF)#formato fecha para dicha variable#
table(defunciones$FECHA_DEF)#
defunciones$aux<-1#
defunciones_total=aggregate(aux~CODIGO_COMUNA_RESIDENCIA+FECHA_DEF+ANO_DEF,data=defunciones,sum)#
defunciones3=aggregate(aux~CODIGO_COMUNA_RESIDENCIA+FECHA_DEF+ANO_DEF+CAPITULO_DIAG1,data=defunciones,sum)#
defunciones_circulatorio=defunciones3 %>% filter(CAPITULO_DIAG1=="I00-I99") #E. sistema circulatorio I00-I99#
defunciones_digestivo=defunciones3 %>% filter(CAPITULO_DIAG1=="K00-K93")    #E. sistema digestivo K00-K93#
defunciones_respiratorio=defunciones3 %>% filter(CAPITULO_DIAG1=="J00-J99") #-Enfermedades del sistema respiratorio  (J00-J99)------#
defunciones_accidentes=defunciones3 %>% filter(CAPITULO_DIAG1=="S00-T98")  #accidentes#
defunciones_cancer=defunciones3 %>% filter(CAPITULO_DIAG1=="C00-D48")  #cancer#
defunciones_tsc=defunciones3 %>% filter(CAPITULO_DIAG1!="U00-U99")#
defunciones4=aggregate(aux~CODIGO_COMUNA_RESIDENCIA+FECHA_DEF+ANO_DEF+CODIGO_SUBCATEGORIA_DIAG1,data=defunciones,sum)#
defunciones_covid=defunciones4 %>% filter(CODIGO_SUBCATEGORIA_DIAG1=="U071"|CODIGO_SUBCATEGORIA_DIAG1=="U072")  #COVID#
#table(defunciones$CODIGO_GRUPO_DIAG1)#
table(defunciones_total_total$CAPITULO_DIAG1)#
defunciones_total$CAPITULO_DIAG1="Total"#
defunciones_tsc$CAPITULO_DIAG1="Total sin Covid"#
names(defunciones_covid)[4]="CAPITULO_DIAG1"#
defunciones_total_total<-rbind(defunciones_total,defunciones_tsc,defunciones_circulatorio,defunciones_digestivo,defunciones_respiratorio,#
      defunciones_accidentes,defunciones_cancer,defunciones_covid)#
sum(defunciones_total_total$aux[which(defunciones_total_total$CAPITULO_DIAG1=="U072")])#OJO SE SUMAN#
sum(defunciones_total_total$aux[which(defunciones_total_total$CAPITULO_DIAG1=="U071")])#
write.csv(defunciones_total_total, file="series_defunciones.csv", row.names = F)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Fallecimientos")#
require("shiny")#
require("shinydashboard")#
require("RColorBrewer")#
require("formattable")#
require(ggplot2)#
require(gridExtra)#
library(scales)#
require(reshape2)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvepusach', token='71D8A873648E2676F1EE3401A7BA7C81', secret='Ideg8Rh3QroO1R2tEOmp9h7wI4GFIlbiga4Wscap')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Fallecimientos", appName = "FallecimientosDeis",account = "gemvepusach")
48138-47969
25919/48138
etwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
ftcomuna<-read.csv("newftcomuna.txt",sep=";",header=T)#
#ftcomuna<-ftcomuna[-c(which(ftcomuna$fch_confirmado=="2021-09-06")),]#
names(ftcomuna)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
casoscom<-read.csv("Covid-19.txt",sep=",",header=T)#
casosact<-read.csv("CasosActivosPorComuna.txt",sep=",",header=T)#
fechas=names(table(ftcomuna$fch_confirmado))
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
ftcomuna<-read.csv("newftcomuna.txt",sep=";",header=T)#
#ftcomuna<-ftcomuna[-c(which(ftcomuna$fch_confirmado=="2021-09-06")),]#
names(ftcomuna)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
casoscom<-read.csv("Covid-19.txt",sep=",",header=T)#
casosact<-read.csv("CasosActivosPorComuna.txt",sep=",",header=T)#
fechas=names(table(ftcomuna$fch_confirmado))
fechas
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data/newftreg")#
ftcomuna<-read.csv("newftcomuna.txt",sep=";",header=T)#
#ftcomuna<-ftcomuna[-c(which(ftcomuna$fch_confirmado=="2021-09-06")),]#
names(ftcomuna)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
casoscom<-read.csv("Covid-19.txt",sep=",",header=T)#
casosact<-read.csv("CasosActivosPorComuna.txt",sep=",",header=T)#
fechas=names(table(ftcomuna$fch_confirmado))
fechas
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftcomuna<-read.csv("newftcomuna.txt",sep=";",header=T)#
#ftcomuna<-ftcomuna[-c(which(ftcomuna$fch_confirmado=="2021-09-06")),]#
names(ftcomuna)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
casoscom<-read.csv("Covid-19.txt",sep=",",header=T)#
casosact<-read.csv("CasosActivosPorComuna.txt",sep=",",header=T)#
fechas=names(table(ftcomuna$fch_confirmado))
fechas
ftr=ftcomuna[which(ftcomuna$fch_confirmado==fechas[length(fechas)]),]#
ftr$fch_confirmado<-"2021-09-17"#
pos=rep(0,dim(ftr)[1])#
pos2=rep(0,dim(ftr)[1])#
for(i in 1:length(pos))#
{#
        pos[i]=which(ftr$id_comuna[i]==casoscom$Codigo.comuna)#
       pos2[i]=which(ftr$id_comuna[i]==casosact$Codigo.comuna)#
}#
l0=dim(casoscom)[2]#
cc=casoscom[pos,]#
ca=casosact[pos2,]#
l0=dim(casosact)[2]#
table(ftr$id_comuna==cc$Codigo.comuna)#
table(ftr$id_comuna==ca$Codigo.comuna)#
cc1=cc[,dim(cc)[2]-1]#
cc2=cc[,dim(cc)[2]-2]#
ca1=ca[,dim(ca)[2]]#
casosnuevos=cc1-cc2#
ftr$cant_casosconfirmados=cc1#
ftr$cant_casosactivos=ca1#
ftcomuna2=rbind(ftcomuna,ftr)#
fechas=names(table(ftcomuna2$fch_confirmado))#
print(sum(ftcomuna2[which(ftcomuna2$fch_confirmado==fechas[length(fechas)]),]$cant_casosconfirmados))#
write.table(ftcomuna2,"newftcomuna.txt",row.names=F)#
ftcomuna<-read.csv("newftcomuna.txt",sep="",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid")#
source("scriptfunciones.R")#
hrcoricomunal<-hrcoricomunal(ftcomuna$fch_confirmado,ftcomuna$cant_casosconfirmados,ftcomuna$id_comuna)#
a=ftcomuna$id_comuna#
p1=names(table(a))#
for(i in 1:length(p1))#
{#
    print(i)#
    pos1=which(a==p1[i])#
    pos1=pos1[-c(1:4)]#
    ftc=ftcomuna[pos1,]#
    pos2=which(hrcoricomunal$comuna==p1[i])#
    hs11=hrcoricomunal[pos2,]#
    ftcomuna[pos1,]$porc_rcori<-hs11$dataF#
    ftcomuna[pos1,]$porc_dercori<-hs11$dataF2#
}#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
write.table(ftcomuna,"newftcomuna.txt",row.names=F,sep=";")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/MapaComunas")#
require("shiny")#
require("shinyWidgets")#
require("shinydashboard")#
require("RColorBrewer")#
require("formattable")#
require(ggplot2)#
library(chilemapas)#
library(tidyverse)#
require(gridExtra)#
require(dplyr)#
library(scales)#
require(reshape2)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvep-usach',#
			  token='37DEB6B514C6E6B9FB83459DAB073A4B',#
			  secret='RC4Vyj0gG5BvCyjDUw3jYdfsuQd9AT3+vaUOyzqH')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/MapaComunas", appName = "mapacomunal",account = "gemvep-usach")
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/DatosComunales")#
require("shiny")#
require("shinydashboard")#
require("shinyWidgets")#
require("RColorBrewer")#
library("rtweet")#
library("shinyscreenshot")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
library(httr)#
#access1="1268970839078289408-vFmbUZY1VHrbXSV4KuEwfyyDtw8K1a"#
#access2="WdkU7NLhVwZfiAqju2gAhx4pZwmLrwTV3nMLo1LO9SZkz"#
#url <- get_authorization_url(app, "http://127.0.0.1:1410")#
#a(href = url, "Authorize this app")#
#token <- create_token(app = "datoscomunales",consumer_key = api_key,consumer_secret = api_secret_key,access_token = access1, access_secret = access2)#
#token <- create_token(app = "datoscomunales",consumer_key = api_key,consumer_secret = api_secret_key)#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvep-usach',#
			  token='37DEB6B514C6E6B9FB83459DAB073A4B',#
			  secret='RC4Vyj0gG5BvCyjDUw3jYdfsuQd9AT3+vaUOyzqH')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/DatosComunales", appName = "datoscomunales",account = "gemvep-usach")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("newftregion.txt",sep=";",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
PCR<-read.csv("PCR.txt",sep=",",header=T)#
CasosNuevos<-read.csv("CasosNuevosCumulativo.txt",sep=",",header=T)#
UCI<-read.csv("UCI.txt",sep=",",header=T)#
CasosCS<-read.csv("CasosNuevosconSintomas.txt",sep=",",header=T)#
CasosSS<-read.csv("CasosNuevossinSintomas.txt",sep=",",header=T)#
Total<-read.csv("TotalesporRegion.txt",sep=",",header=T)#
antigeno<-Total[which(Total[,2]=="Casos nuevos confirmados por antigeno"),]#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
PCR1=PCR[pos[1:16],dim(PCR)[2]]#
antigeno1=antigeno[pos[1:16],dim(antigeno)[2]]#
Casos=CasosNuevos[pos,dim(CasosNuevos)[2]]#
Casos2=Casos-c(antigeno1,sum(antigeno1))#
UCI2=UCI[pos[1:16],dim(UCI)[2]]#
CS=CasosCS[pos,dim(CasosCS)[2]]#
SS=CasosSS[pos,dim(CasosSS)[2]]#
fechas=names(table(ftregion$fch_confirmado))#
ftr=ftregion[which(ftregion$fch_confirmado==fechas[length(fechas)]),]
fechas
ftr$fch_confirmado<-"2021-09-20"#
ftr$cant_casosconfirmadosdiario[1:17]<-Casos[c(17,1:16)]#
ftr$cant_casosconfirmadosdiario2<-ftr$cant_casosconfirmadosdiario#
ftr$cant_casosconfirmadosdiario2[1:17]<-Casos2[c(17,1:16)]#
ftr$cant_casosconfirmadosss[1:17]<-SS[c(17,1:16)]#
ftr$cant_casosconfirmadoscs[1:17]<-CS[c(17,1:16)]#
ftr$cant_casosconfirmados[1:17]<-ftr$cant_casosconfirmados[1:17]+Casos[c(17,1:16)]#
ftr$cant_casosconfirmados[18]=sum(ftr$cant_casosconfirmados[c(2,3,16)])#
ftr$cant_casosconfirmados[19]=sum(ftr$cant_casosconfirmados[c(4,5)])#
ftr$cant_casosconfirmados[20]=sum(ftr$cant_casosconfirmados[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmados[21]=sum(ftr$cant_casosconfirmados[c(10,11,15)])#
ftr$cant_casosconfirmados[22]=sum(ftr$cant_casosconfirmados[c(12,13)])#
ftr$cant_casosconfirmados[23]=sum(ftr$cant_casosconfirmados[c(2:13,15:17)])#
ftr$cant_casosconfirmadosdiario[18]=sum(ftr$cant_casosconfirmadosdiario[c(2,3,16)])#
ftr$cant_casosconfirmadosdiario[19]=sum(ftr$cant_casosconfirmadosdiario[c(4,5)])#
ftr$cant_casosconfirmadosdiario[20]=sum(ftr$cant_casosconfirmadosdiario[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadosdiario[21]=sum(ftr$cant_casosconfirmadosdiario[c(10,11,15)])#
ftr$cant_casosconfirmadosdiario[22]=sum(ftr$cant_casosconfirmadosdiario[c(12,13)])#
ftr$cant_casosconfirmadosdiario[23]=sum(ftr$cant_casosconfirmadosdiario[c(2:13,15:17)])#
ftr$cant_casosconfirmadosdiario2[18]=sum(ftr$cant_casosconfirmadosdiario2[c(2,3,16)])#
ftr$cant_casosconfirmadosdiario2[19]=sum(ftr$cant_casosconfirmadosdiario2[c(4,5)])#
ftr$cant_casosconfirmadosdiario2[20]=sum(ftr$cant_casosconfirmadosdiario2[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadosdiario2[21]=sum(ftr$cant_casosconfirmadosdiario2[c(10,11,15)])#
ftr$cant_casosconfirmadosdiario2[22]=sum(ftr$cant_casosconfirmadosdiario2[c(12,13)])#
ftr$cant_casosconfirmadosdiario2[23]=sum(ftr$cant_casosconfirmadosdiario2[c(2:13,15:17)])#
ftr$cant_casosconfirmadosss[18]=sum(ftr$cant_casosconfirmadosss[c(2,3,16)])#
ftr$cant_casosconfirmadosss[19]=sum(ftr$cant_casosconfirmadosss[c(4,5)])#
ftr$cant_casosconfirmadosss[20]=sum(ftr$cant_casosconfirmadosss[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadosss[21]=sum(ftr$cant_casosconfirmadosss[c(10,11,15)])#
ftr$cant_casosconfirmadosss[22]=sum(ftr$cant_casosconfirmadosss[c(12,13)])#
ftr$cant_casosconfirmadosss[23]=sum(ftr$cant_casosconfirmadosss[c(2:13,15:17)])#
ftr$cant_casosconfirmadoscs[18]=sum(ftr$cant_casosconfirmadoscs[c(2,3,16)])#
ftr$cant_casosconfirmadoscs[19]=sum(ftr$cant_casosconfirmadoscs[c(4,5)])#
ftr$cant_casosconfirmadoscs[20]=sum(ftr$cant_casosconfirmadoscs[c(6,7,8,9,14,17)])#
ftr$cant_casosconfirmadoscs[21]=sum(ftr$cant_casosconfirmadoscs[c(10,11,15)])#
ftr$cant_casosconfirmadoscs[22]=sum(ftr$cant_casosconfirmadoscs[c(12,13)])#
ftr$cant_casosconfirmadoscs[23]=sum(ftr$cant_casosconfirmadoscs[c(2:13,15:17)])#
ftr$cant_pcr[1:17]=c(sum(PCR1),PCR1)#
ftr$cant_uci[1:17]=c(sum(UCI2),UCI2)#
ftr$cant_pcr[18]=sum(ftr$cant_pcr[c(2,3,16)])#
ftr$cant_pcr[19]=sum(ftr$cant_pcr[c(4,5)])#
ftr$cant_pcr[20]=sum(ftr$cant_pcr[c(6,7,8,9,14,17)])#
ftr$cant_pcr[21]=sum(ftr$cant_pcr[c(10,11,15)])#
ftr$cant_pcr[22]=sum(ftr$cant_pcr[c(12,13)])#
ftr$cant_pcr[23]=sum(ftr$cant_pcr[c(2:13,15:17)])#
ftr$cant_uci[18]=sum(ftr$cant_uci[c(2,3,16)])#
ftr$cant_uci[19]=sum(ftr$cant_uci[c(4,5)])#
ftr$cant_uci[20]=sum(ftr$cant_uci[c(6,7,8,9,14,17)])#
ftr$cant_uci[21]=sum(ftr$cant_uci[c(10,11,15)])#
ftr$cant_uci[22]=sum(ftr$cant_uci[c(12,13)])#
ftr$cant_uci[23]=sum(ftr$cant_uci[c(2:13,15:17)])#
ftr$porc_positividad=ftr$cant_casosconfirmadosdiario2/ftr$cant_pcr#
ftr=ftr[,-dim(ftr)[2]]#
ftregion2=rbind(ftregion,ftr)#
ftregion2=ftregion2[order(ftregion2$id_region),]#
fechas=names(table(ftregion2$fch_confirmado))#
print(ftregion2[which(ftregion2$fch_confirmado==fechas[length(fechas)]),]$cant_casosconfirmadosdiario)#
#ftregion2[which(ftregion2$fch_confirmado==fechas[length(fechas)-5]),]$cant_uci=c(1272,43,80,6,25,97,55,77,173,65,69,6,12,493,16,18,37,18+43+80,6+25,97+493+55+77+37+173,65+16+69,6+12,1272-493)#
write.table(ftregion2,"newftregion.txt",row.names=F)#
ftregion<-read.csv("newftregion.txt",sep="",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/")#
source("scriptfunciones.R")#
fechas=names(table(ftregion$fch_confirmado))#
ftr1=ftregion[which(ftregion$fch_confirmado==fechas[length(fechas)]),]#
ftr=ftregion#
hs=hspline(ftr$id_region,ftr$cant_casosconfirmadosdiario,ftr$cant_pcr,ftr$porc_positividad,ftr$txt_nombreregion,ftr$fch_confirmado)#
a=ftr$id_region#
pos1=which(a==0)#
p1=names(table(a))#
for(i in 1:length(p1))#
{#
    print(i)#
    pos1=which(a==p1[i])#
    hs1=hs[,i+2]#
    print(tail(ftr$porc_roslmp[pos1]-hs1))#
    ftr$porc_roslmp[pos1]<-hs1#
    hs1=hs[,i+25]#
    ftr$porc_deroslmp[pos1]<-hs1#
}#
hr1<-hrefectivo(ftr$id_region,ftr$cant_casosconfirmadosdiario,ftr$cant_pcr,ftr$porc_positividad,ftr$txt_nombreregion,ftr$fch_confirmado)#
a=ftr$id_region#
pos1=which(a==0)#
p1=names(table(a))#
for(i in 1:length(p1))#
{#
    print(i)#
    pos1=which(a==p1[i])#
    pos1=pos1[-c(1:7)]#
    hs11=hr1[,i+1]#
    print(tail(ftr$porc_roefectivo[pos1]-hs11))#
    ftr$porc_roefectivo[pos1]<-hs11#
    hs11=hr1[,i+24]#
    ftr$porc_deroefectivo[pos1]<-hs11#
}#
#
clus=hclusterseguimiento(ftr$id_region,ftr$txt_nombreregion,ftr$cant_casosconfirmadosdiario,ftr$cant_poblacion,ftr$porc_roslmp,ftr$fch_confirmado,ftr$porc_deroslmp,ftr$porc_deroefectivo,ftr$porc_roefectivo)#
a=ftr$id_region#
for(i in 1:16)#
{#
    print(i)#
    pos2=which(clus[,2]==i)#
    pos1=which(a==i)#
    pos1=pos1[-c(1:57)]#
    hs11=clus[pos2,6]#
    print(tail(ftr$num_cluster[pos1]-hs11))#
    ftr$num_cluster[pos1]<-hs11#
    hs11=clus[pos2,3]#
    ftr$porc_meanpositiverate[pos1]<-hs11#
    hs11=clus[pos2,4]#
    ftr$num_meanrcori[pos1]<-hs11#
    hs11=clus[pos2,5]#
    ftr$num_tasaconfirmadosch[pos1]<-hs11#
}#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid")#
#ftis<-read.csv("ftiniciosintomas3.txt",sep=" ",header=T)#
ftis<-read.csv("ftiniciosintomas2.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data")#
hclusterchowell<-hclusterchowell(ftr,ftis)#
ftr[which(ftr$fch_confirmado==fechas[length(fechas)])[2:17],]$num_clustermod2=hclusterchowell[,8]#
write.table(ftr,"newftregion.txt",row.names=F,sep=";")
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivo")#
require("shiny")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
deployApp()
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/VisualizadorRegional")#
require("shiny")#
require("shinydashboard")#
require("RColorBrewer")#
require(ggplot2)#
require(gridExtra)#
library(scales)#
require(reshape2)#
require(ggrepel)#
require("stringr")#
require("shinyWidgets")#
require("formattable")#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvepusach', token='71D8A873648E2676F1EE3401A7BA7C81', secret='Ideg8Rh3QroO1R2tEOmp9h7wI4GFIlbiga4Wscap')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/VisualizadorRegional", appName = "visualizadorregional",account = "gemvepusach")
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
	fechas=names(table(ftregion$fch_confirmado))#
	l1=length(fechas)#
ftregion2=ftregion[which(ftregion$fch_confirmado==fechas[l1]),]#
ftregion3=ftregion[which(ftregion$fch_confirmado==fechas[l1-1]),]#
a=ftregion2$id_region#
b=ftregion2$txt_nombreregion#
c=ftregion2$cant_casosconfirmadosdiario#
d=ftregion2$cant_poblacion#
tasa=c/d*100000#
d=ftregion2$porc_positividad#
d0=ftregion2$porc_roslmp#
c1=ftregion3$cant_casosconfirmadosdiario#
d1=ftregion3$cant_poblacion#
tasa1=c1/d1*100000#
d1=ftregion3$porc_positividad#
e=ftregion2$num_cluster#
e1=ftregion2$num_clustermod2#
#
e=apply(cbind(e,e1),1,mean)#
e=trunc(e-0.01)+1
e
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/BalanceRegional2")#
require("shiny")#
require("chilemapas")#
require(RColorBrewer)#
require(ggplot2)#
require(tidyverse)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
deployApp()#
#rsconnect::setAccountInfo(name='gemvep',#
			  #token='F480D2DEA85978C1941766081D563D45',#
			  #secret='VGBIflzv+1+eLbo+LA1jAU4VYmMmLlrSKAL2L5ur')#
deployApp()
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/BalanceRegional2")#
require("shiny")#
require("chilemapas")#
require(RColorBrewer)#
require(ggplot2)#
require(tidyverse)#
require(gridExtra)#
source("ui.R")#
source("server.R")
library(rsconnect)#
deployApp()
shinyApp(ui = ui, server = server)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/BalanceRegional2")#
require("shiny")#
require("chilemapas")#
require(RColorBrewer)#
require(ggplot2)#
require(tidyverse)#
require(gridExtra)#
source("ui.R")#
source("server.R")
shinyApp(ui = ui, server = server)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data/")#
Total<-read.csv("TotalesporRegion.txt",sep=",",header=T)#
antigeno<-Total[which(Total[,2]=="Casos nuevos confirmados por antigeno"),]#
antigeno2<-antigeno[,(dim(antigeno)[2]-6):(dim(antigeno)[2])]#
antigeno3<-apply(antigeno2,1,sum)#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
antigeno4<-antigeno3[pos[1:16]]#
antigeno5<-c(sum(antigeno4),antigeno4)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
fecha=names(table(ftregion$fch_confirmado))#
l1=length(fecha)#
#Positividad Ultima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-6]),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
#tabla1[which(tabla1[,1]==0),2]=tabla1[which(tabla1[,1]==0),2]+35006#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
tabla2[1:17,2]=tabla2[1:17,2]-antigeno5#
#tabla2[which(tabla2[,1]==0),2]=tabla2[which(tabla2[,1]==0),2]+3958 #
posit=tabla2[,2]/tabla1[,2]#
tabla=cbind(tabla1,tabla2[,2],posit)#
pos=order(posit[2:17],decreasing=T)#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
maxim=cbind(regiones[pos[1:13]],round(posit[2:17][pos[1:13]]*100,2))#
minim=cbind(regiones[pos[14:16]],round(posit[2:17][pos[14:16]]*100,2))#
#
#Positividad PenUltima Semana#
antigeno2<-antigeno[,(dim(antigeno)[2]-13):(dim(antigeno)[2]-7)]#
antigeno3<-apply(antigeno2,1,sum)#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
antigeno4<-antigeno3[pos[1:16]]#
antigeno5<-c(sum(antigeno4),antigeno4)#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-13] & ftregion$fch_confirmado <=fecha[l1-7] ),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
tabla2[1:17,2]=tabla2[1:17,2]-antigeno5#
posit=tabla2[,2]/tabla1[,2]#
tabla0=cbind(tabla1,tabla2[,2],posit)#
#
print(paste("Positividad Semanal:",round(tabla[1,4]*100,2),"%",sep=""))#
print(paste("Positividad Semana Anterior:",round(tabla0[1,4]*100,2),"%",sep=""))#
print(paste("Variacion Semanal:",round((tabla[1,4]/tabla0[1,4]-1)*100,2),"%",sep=""))#
print(paste("Maximas Positividades:",maxim[,1],maxim[,2],"%",sep=" "))#
print(paste("Minimas Positividades:",minim[,1],minim[,2],"%",sep=" "))#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
fecha=names(table(ftregion$fch_confirmado))#
l1=length(fecha)#
#Positividad Ultima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-6]),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla3=aggregate(cant_poblacion~id_region,ftregion3,mean)#
#tabla1[which(tabla1[,1]==0),2]=tabla1[which(tabla1[,1]==0),2]+25817#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
#tabla2[which(tabla2[,1]==0),2]=tabla2[which(tabla2[,1]==0),2]+2457#
posit=tabla2[,2]/tabla1[,2]#
inc=tabla2[,2]/tabla3[,2]*100000#
tabla=cbind(tabla1,tabla2[,2],posit,inc)#
pos=order(tabla[2:17,5],decreasing=T)#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
maxim=cbind(regiones[pos[1:6]],round(tabla[2:17,5][pos[1:6]],2))#
pos2=order(tabla[2:17,3],decreasing=T)#
maxim=cbind(regiones[pos[1:13]],round(tabla[2:17,5][pos[1:13]],5))#
minim=cbind(regiones[pos[14:16]],round(tabla[2:17,5] [pos[14:16]],5))#
#
#Positividad PenUltima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-13] & ftregion$fch_confirmado <=fecha[l1-7] ),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
posit=tabla2[,2]/tabla1[,2]#
tabla0=cbind(tabla1,tabla2[,2],posit)#
#
print(paste("Incidencia Semanal:",tabla[1,3],sep=""))#
print(paste("Incidencia Semana Anterior:",tabla0[1,3],sep=""))#
print(paste("Variacion Semanal:",round(((tabla[1,3]/tabla0[1,3])-1)*100,2),"%",sep=""))#
print(paste("Maximas Incidencias:",maxim[,1],round(as.numeric(maxim[,2])/7,2),sep=" "))#
print(paste("Minimas Incidencias:",minim[,1],round(as.numeric(minim[,2])/7,2),sep=" "))
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data/")#
Total<-read.csv("TotalesporRegion.txt",sep=",",header=T)#
antigeno<-Total[which(Total[,2]=="Casos nuevos confirmados por antigeno"),]#
antigeno2<-antigeno[,(dim(antigeno)[2]-6):(dim(antigeno)[2])]#
antigeno3<-apply(antigeno2,1,sum)#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
antigeno4<-antigeno3[pos[1:16]]#
antigeno5<-c(sum(antigeno4),antigeno4)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
fecha=names(table(ftregion$fch_confirmado))#
l1=length(fecha)#
#Positividad Ultima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-6]),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
#tabla1[which(tabla1[,1]==0),2]=tabla1[which(tabla1[,1]==0),2]+35006#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
tabla2[1:17,2]=tabla2[1:17,2]-antigeno5#
#tabla2[which(tabla2[,1]==0),2]=tabla2[which(tabla2[,1]==0),2]+3958 #
posit=tabla2[,2]/tabla1[,2]#
tabla=cbind(tabla1,tabla2[,2],posit)#
pos=order(posit[2:17],decreasing=T)#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
maxim=cbind(regiones[pos[1:13]],round(posit[2:17][pos[1:13]]*100,2))#
minim=cbind(regiones[pos[14:16]],round(posit[2:17][pos[14:16]]*100,2))#
#
#Positividad PenUltima Semana#
antigeno2<-antigeno[,(dim(antigeno)[2]-13):(dim(antigeno)[2]-7)]#
antigeno3<-apply(antigeno2,1,sum)#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
antigeno4<-antigeno3[pos[1:16]]#
antigeno5<-c(sum(antigeno4),antigeno4)#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-13] & ftregion$fch_confirmado <=fecha[l1-7] ),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
tabla2[1:17,2]=tabla2[1:17,2]-antigeno5#
posit=tabla2[,2]/tabla1[,2]#
tabla0=cbind(tabla1,tabla2[,2],posit)#
#
print(paste("Positividad Semanal:",round(tabla[1,4]*100,2),"%",sep=""))#
print(paste("Positividad Semana Anterior:",round(tabla0[1,4]*100,2),"%",sep=""))#
print(paste("Variacion Semanal:",round((tabla[1,4]/tabla0[1,4]-1)*100,2),"%",sep=""))#
print(paste("Maximas Positividades:",maxim[,1],maxim[,2],"%",sep=" "))#
print(paste("Minimas Positividades:",minim[,1],minim[,2],"%",sep=" "))#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
fecha=names(table(ftregion$fch_confirmado))#
l1=length(fecha)#
#Positividad Ultima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-6]),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla3=aggregate(cant_poblacion~id_region,ftregion3,mean)#
#tabla1[which(tabla1[,1]==0),2]=tabla1[which(tabla1[,1]==0),2]+25817#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
#tabla2[which(tabla2[,1]==0),2]=tabla2[which(tabla2[,1]==0),2]+2457#
posit=tabla2[,2]/tabla1[,2]#
inc=tabla2[,2]/tabla3[,2]*100000#
tabla=cbind(tabla1,tabla2[,2],posit,inc)#
pos=order(tabla[2:17,5],decreasing=T)#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
maxim=cbind(regiones[pos[1:6]],round(tabla[2:17,5][pos[1:6]],2))#
pos2=order(tabla[2:17,3],decreasing=T)#
maxim=cbind(regiones[pos[1:13]],round(tabla[2:17,5][pos[1:13]],5))#
minim=cbind(regiones[pos[14:16]],round(tabla[2:17,5] [pos[14:16]],5))#
#
#Positividad PenUltima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-13] & ftregion$fch_confirmado <=fecha[l1-7] ),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
posit=tabla2[,2]/tabla1[,2]#
tabla0=cbind(tabla1,tabla2[,2],posit)#
#
print(paste("Incidencia Semanal:",tabla[1,3],sep=""))#
print(paste("Incidencia Semana Anterior:",tabla0[1,3],sep=""))#
print(paste("Variacion Semanal:",round(((tabla[1,3]/tabla0[1,3])-1)*100,2),"%",sep=""))#
print(paste("Maximas Incidencias:",maxim[,1],round(as.numeric(maxim[,2])/7,2),sep=" "))#
print(paste("Minimas Incidencias:",minim[,1],round(as.numeric(minim[,2])/7,2),sep=" "))
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivo")#
require("shiny")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
deployApp()
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivocom")#
require("shiny")#
require("shinyWidgets")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivocom", appName = "recom",#
          appTitle = "recom")
#install.packages("shiny")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/REfectivo")#
require("shiny")#
require(ggplot2)#
require(gridExtra)#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
deployApp()
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid")#
uci<-read.csv("Camas_UCI_Diarias.txt",sep=",",header=T)#
#uci<-uci[,-dim(uci)[2]]#
aux=uci[which(uci[,1]=="Total"),]#
camasdisp=as.numeric(aux[1,])-as.numeric(aux[2,])-as.numeric(aux[3,])#
camas=as.numeric(aux[1,])#
camasusadas=as.numeric(aux[2,])+as.numeric(aux[3,])#
camascovid=as.numeric(aux[2,])#
serie=(as.numeric(aux[2,])+as.numeric(aux[3,]))/as.numeric(aux[1,])#
aux2=aux[,dim(aux)[2]]#
nac=sum(aux2[2:3])/aux2[1]#
print(sum(aux2[2:3])/aux2[1])#
print(sum(aux2[2:3])/aux2[1])#
porc=rep(0,dim(uci)[2])#
porc2=rep(0,dim(uci)[2])#
porc3=rep(0,dim(uci)[2])#
for(i in 3:dim(uci)[2])#
{#
	aux=uci[which(uci[,1]=="Total"),]#
	aux2=aux[,i]#
	porc[i]=sum(aux2[2:3])/sum(aux2[1])#
	porc2[i]=sum(aux2[2])/sum(aux2[2:3])#
	porc3[i]=sum(aux2[2:3])/sum(aux2[4])#
}#
#camash=c(4329+188)#
#camasu=camash-188#
#new=camasu/camash#
#new2=c(3229)/camasu#
#new3=camasu/1331#
#porc=c(porc,new)#
#porc2=c(porc2,new2)#
#porc3=c(porc3,new3)
fecha=seq(as.Date("2020/04/14"), as.Date("2021/09/21"), "day")#
plot(fecha,porc[-c(1:2)],type="l",main="Ocupacion UCI",xlab="Dia",ylab="% Ocupacion UCI",yaxt="n",xaxt="n",ylim=c(0.2,1),cex.lab=0.5)#
axis(2, at=pretty(porc), lab=paste(pretty(porc) * 100,"%"), las=TRUE)#
	axis(1, at=fecha,lab=fecha,las=2,cex.axis=0.5)#
points(fecha,porc[-c(1:2)],pch=20)#
points(fecha,porc2[-c(1:2)],pch=20,col="red")#
lines(fecha,porc2[-c(1:2)],col="red")#
porcf=porc[length(porc)]#
porcf2=porc2[length(porc2)]#
porcf7=porc[length(porc)-7]#
porcf72=porc2[length(porc2)-7]#
p1=which.max(porc)#
p2=which.max(porc2)#
text(fecha[length(fecha)]+4,porcf2-0.02,paste(round(porcf2 * 100,1),"%"),cex=0.6,col="red",lwd=2)	#
text(fecha[length(fecha)]+4,porcf-0.02,paste(round(porcf * 100,1),"%"),cex=0.6,lwd=2)#
text(fecha[length(fecha)-7]+4,porcf72+0.02,paste(round(porcf72 * 100,1),"%"),cex=0.6,col="red",lwd=2)	#
#text(fecha[length(fecha)-7]+4,porcf7+0.02,paste(round(porcf7 * 100,1),"%"),cex=0.6,lwd=2)#
text(fecha[p2]+4,porc2[p2]+0.02,paste(round(porc2[p2] * 100,1),"%"),cex=0.6,col="red",lwd=2)	#
text(fecha[p1]+4,porc[p1]+0.02,paste(round(porc[p1] * 100,1),"%"),cex=0.6,lwd=2)#
legend("topleft",c("% Ocupacion Camas UCI","% Camas UCI usadas por Covid-19"),col=c(1,"red"),cex=.5,lty=1)#
abline(h=0.222,col="blue",lty=2,lwd=2)#
fecha[head(order(porc2,decreasing=T),14)-2]#
fecha[head(order(porc,decreasing=T),14)-2]#
fecha[head(order(porc2),14)[-c(1:2)]-2]#
fecha[head(order(porc),14)[-c(1:2)]-2]
require(RColorBrewer)#
nombres=names(table(uci$Region))#
porc=rep(0,length(nombres))#
for(i in 1:length(nombres))#
{#
	aux=uci[which(uci[,1]==nombres[i]),]#
	aux2=aux[,dim(aux)[2]]#
	porc[i]=sum(aux2[2:3])/aux2[1]#
}#
id_region=c(2,9,16,3,11,8,4,10,14,12,7,13,6,1,0,5,16)#
pos=c(14,1,4,7,16,13,11,6,2,8,5,10,12,9,3,17)#
nombres2=nombres[pos]#
porc2=porc[pos]#
nac=porc[-pos]#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
df=data.frame("Region"=regiones,"id_region"=1:16,"Ocupacion"=porc2)#
df=df[c(15,1:5,13,6:7,16,8:9,14,10:12),]#
barplot(df[,3]*100,main="% Ocupacion UCI por Region",xlab="",ylab="% Ocupacion UCI",ylim=c(0,100), names.arg=df[,1],cex.names=0.5,las=2,col=brewer.pal(9, "Blues"),yaxt="n")#
axis(2, at=c(0,10,25,40,55,70,85,100), lab=paste(c(0,10,25,40,55,70,85,100),"%"), las=TRUE)#
abline(h=nac*100,col="red",lwd=2)#
text(13,0.98*100,paste("Ocupacion Nacional",round(nac*100,2),"%"),col="red",lwd=3)#
df[order(df[,3],decreasing=T),]
nombres=names(table(uci$Region))#
porc=rep(0,length(nombres))#
for(i in 1:length(nombres))#
{#
	aux=uci[which(uci[,1]==nombres[i]),]#
	aux2=aux[,dim(aux)[2]]#
	porc[i]=aux2[1]-sum(aux2[2:3])#
}#
id_region=c(2,9,16,3,11,8,4,10,14,12,7,13,6,1,0,5,16)#
pos=c(14,1,4,7,16,13,11,6,2,8,5,10,12,9,3,17)#
nombres2=nombres[pos]#
porc2=porc[pos]#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
df=data.frame("Region"=regiones,"id_region"=1:16,"Ocupacion"=porc2)#
df=df[c(15,1:5,13,6:7,16,8:9,14,10:12),]#
barplot(df[,3],main="Numero de Camas Disponibles",xlab="",ylab="Numero de Camas Disponibles",ylim=c(0,100), names.arg=df[,1],cex.names=0.5,las=2,col=brewer.pal(9, "Blues"))#
abline(h=mean(df[,3]),col="red",lwd=2)#
text(15,95,paste("Promedio Nacional",round(nac*100,2),"%"),col="red",lwd=2)#
df[order(df[,3],decreasing=T),]#
#
nombres=names(table(uci$Region))#
porc=rep(0,length(nombres))#
for(i in 1:length(nombres))#
{#
	aux=uci[which(uci[,1]==nombres[i]),]#
	aux2=aux[,dim(aux)[2]]#
	porc[i]=sum(aux2[2])/sum(aux2[2:3])#
}#
id_region=c(2,9,16,3,11,8,4,10,14,12,7,13,6,1,0,5,16)#
pos=c(14,1,4,7,16,13,11,6,2,8,5,10,12,9,3,17)#
nombres2=nombres[pos]#
porc2=porc[pos]#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
df=data.frame("Region"=regiones,"id_region"=1:16,"Ocupacion"=porc2)#
nac=porc[-pos]#
df=df[c(15,1:5,13,6:7,16,8:9,14,10:12),]#
barplot(df[,3]*100,main="% Camas UCI usadas por Covid-19",xlab="",ylab="% Camas UCI usadas por Covid-19",ylim=c(0,100), names.arg=df[,1],cex.names=0.5,las=2,col=brewer.pal(9, "Blues"),yaxt="n")#
axis(2, at=c(0,10,25,40,55,70,85,100), lab=paste(c(0,10,25,40,55,70,85,100),"%"), las=TRUE)#
abline(h=nac*100,col="red",lwd=2)#
text(10,0.95*100,paste("Camas UCI usadas por Covid-19 Pais",round(nac*100,2),"%"),col="red",lwd=2)#
df[order(df[,3],decreasing=T),]#
#
nombres=names(table(uci$Region))#
porc=rep(0,length(nombres))#
for(i in 1:length(nombres))#
{#
	aux=uci[which(uci[,1]==nombres[i]),]#
	aux2=aux[,dim(aux)[2]]#
	porc[i]=sum(aux2[2:3])/sum(aux2[4])#
}#
id_region=c(2,9,16,3,11,8,4,10,14,12,7,13,6,1,0,5,16)#
pos=c(14,1,4,7,16,13,11,6,2,8,5,10,12,9,3,17)#
nombres2=nombres[pos]#
porc2=porc[pos]#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
df=data.frame("Region"=regiones,"id_region"=1:16,"Ocupacion"=porc2)#
nac=porc[-pos]#
df=df[c(15,1:5,13,6:7,16,8:9,14,10:12),]#
barplot(df[,3]*100,main="% Camas UCI usadas sobre basal 2019",xlab="",ylab="% Camas UCI usadas sobre basal 2019", names.arg=df[,1],cex.names=0.5,las=2,col=brewer.pal(9, "Blues"),ylim=c(0,300),yaxt="n")#
axis(2, at=c(0,100,200,250,300,350,400,450,500), lab=paste(c(0,100,200,250,300,350,400,450,500),"%"), las=TRUE,cex.axis=0.8)#
abline(h=nac*100,col="red",lwd=2)#
text(10,2.90*100,paste("% Camas UCI usadas sobre basal 2019 Pais",round(nac*100,2),"%"),col="red",lwd=2)#
df[order(df[,3],decreasing=T),]
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/VisualizadorRegional")#
require("shiny")#
require("shinydashboard")#
require("RColorBrewer")#
require(ggplot2)#
require(gridExtra)#
library(scales)#
require(reshape2)#
require(ggrepel)#
require("stringr")#
require("shinyWidgets")#
require("formattable")#
source("ui.R")#
source("server.R")#
#shinyApp(ui = ui, server = server)#
library(rsconnect)#
rsconnect::setAccountInfo(name='gemvepusach', token='71D8A873648E2676F1EE3401A7BA7C81', secret='Ideg8Rh3QroO1R2tEOmp9h7wI4GFIlbiga4Wscap')#
deployApp("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/VisualizadorRegional", appName = "visualizadorregional",account = "gemvepusach")
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/Data/")#
Total<-read.csv("TotalesporRegion.txt",sep=",",header=T)#
antigeno<-Total[which(Total[,2]=="Casos nuevos confirmados por antigeno"),]#
antigeno2<-antigeno[,(dim(antigeno)[2]-6):(dim(antigeno)[2])]#
antigeno3<-apply(antigeno2,1,sum)#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
antigeno4<-antigeno3[pos[1:16]]#
antigeno5<-c(sum(antigeno4),antigeno4)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
fecha=names(table(ftregion$fch_confirmado))#
l1=length(fecha)#
#Positividad Ultima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-6]),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
#tabla1[which(tabla1[,1]==0),2]=tabla1[which(tabla1[,1]==0),2]+35006#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
tabla2[1:17,2]=tabla2[1:17,2]-antigeno5#
#tabla2[which(tabla2[,1]==0),2]=tabla2[which(tabla2[,1]==0),2]+3958 #
posit=tabla2[,2]/tabla1[,2]#
tabla=cbind(tabla1,tabla2[,2],posit)#
pos=order(posit[2:17],decreasing=T)#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
maxim=cbind(regiones[pos[1:13]],round(posit[2:17][pos[1:13]]*100,2))#
minim=cbind(regiones[pos[14:16]],round(posit[2:17][pos[14:16]]*100,2))#
#
#Positividad PenUltima Semana#
antigeno2<-antigeno[,(dim(antigeno)[2]-13):(dim(antigeno)[2]-7)]#
antigeno3<-apply(antigeno2,1,sum)#
pos=c(2:6,8:9,11:12,14:16,7,13,1,10,17)#
antigeno4<-antigeno3[pos[1:16]]#
antigeno5<-c(sum(antigeno4),antigeno4)#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-13] & ftregion$fch_confirmado <=fecha[l1-7] ),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
tabla2[1:17,2]=tabla2[1:17,2]-antigeno5#
posit=tabla2[,2]/tabla1[,2]#
tabla0=cbind(tabla1,tabla2[,2],posit)#
#
print(paste("Positividad Semanal:",round(tabla[1,4]*100,2),"%",sep=""))#
print(paste("Positividad Semana Anterior:",round(tabla0[1,4]*100,2),"%",sep=""))#
print(paste("Variacion Semanal:",round((tabla[1,4]/tabla0[1,4]-1)*100,2),"%",sep=""))#
print(paste("Maximas Positividades:",maxim[,1],maxim[,2],"%",sep=" "))#
print(paste("Minimas Positividades:",minim[,1],minim[,2],"%",sep=" "))#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Covid-19/Datos Covid/ShinyApps/newftreg")#
ftregion<-read.csv("ftregion.txt",sep=";",header=T)#
fecha=names(table(ftregion$fch_confirmado))#
l1=length(fecha)#
#Positividad Ultima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-6]),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla3=aggregate(cant_poblacion~id_region,ftregion3,mean)#
#tabla1[which(tabla1[,1]==0),2]=tabla1[which(tabla1[,1]==0),2]+25817#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
#tabla2[which(tabla2[,1]==0),2]=tabla2[which(tabla2[,1]==0),2]+2457#
posit=tabla2[,2]/tabla1[,2]#
inc=tabla2[,2]/tabla3[,2]*100000#
tabla=cbind(tabla1,tabla2[,2],posit,inc)#
pos=order(tabla[2:17,5],decreasing=T)#
regiones=c("Tarapaca","Antofagasta","Atacama","Coquimbo","Valparaiso","Ohiggins","Maule","Bio-Bio","Araucania","Los Lagos","Aysen","Magallanes","Metropolitana","Los Rios","Arica","Nuble")#
maxim=cbind(regiones[pos[1:6]],round(tabla[2:17,5][pos[1:6]],2))#
pos2=order(tabla[2:17,3],decreasing=T)#
maxim=cbind(regiones[pos[1:13]],round(tabla[2:17,5][pos[1:13]],5))#
minim=cbind(regiones[pos[14:16]],round(tabla[2:17,5] [pos[14:16]],5))#
#
#Positividad PenUltima Semana#
ftregion3=ftregion[which(ftregion$fch_confirmado >=fecha[l1-13] & ftregion$fch_confirmado <=fecha[l1-7] ),]#
table(ftregion3$fch_confirmado)#
tabla1=aggregate(cant_pcr~id_region,ftregion3,sum)#
tabla2=aggregate(cant_casosconfirmadosdiario~id_region,ftregion3,sum)#
posit=tabla2[,2]/tabla1[,2]#
tabla0=cbind(tabla1,tabla2[,2],posit)#
#
print(paste("Incidencia Semanal:",tabla[1,3],sep=""))#
print(paste("Incidencia Semana Anterior:",tabla0[1,3],sep=""))#
print(paste("Variacion Semanal:",round(((tabla[1,3]/tabla0[1,3])-1)*100,2),"%",sep=""))#
print(paste("Maximas Incidencias:",maxim[,1],round(as.numeric(maxim[,2])/7,2),sep=" "))#
print(paste("Minimas Incidencias:",minim[,1],round(as.numeric(minim[,2])/7,2),sep=" "))
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")
namefile="OGLE054229.59-710251.4.dat" #EB
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="OGLE054229.59-710251.4.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE053513.68-701354.1.dat" #EA#
#namefile2="OGLE052547.24-692056.4.dat" #EA#
namefile3="OGLE051021.63-690208.2.dat" #EA#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	pos=which(diff(sT)<1)#
	sT2=sT[-c(pos+1)]#
	y=y[-c(pos+1)]#
	newt=sT2/min(diff(sT2))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="OGLE054229.59-710251.4.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE053513.68-701354.1.dat" #EA#
#namefile2="OGLE052547.24-692056.4.dat" #EA#
namefile3="OGLE051021.63-690208.2.dat" #EA#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL
i=1
f1
data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])
f1
dim(data)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="OGLE054229.59-710251.4.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE053513.68-701354.1.dat" #EA#
#namefile2="OGLE052547.24-692056.4.dat" #EA#
namefile3="OGLE051021.63-690208.2.dat" #EA#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="OGLE054229.59-710251.4.dat" #EB#
#namefile="230217.dat"#DMCEP#
#namefile2="OGLE053513.68-701354.1.dat" #EA#
namefile2="OGLE050520.56-683916.9.dat"#
#
namefile3="OGLE052959.87-695950.1.dat" #EA#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="82181.dat" #EB#
#namefile="230217.dat"#DMCEP#
#namefile2="OGLE053513.68-701354.1.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #EB#
#namefile="230217.dat"#DMCEP#
#namefile2="OGLE053513.68-701354.1.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="21140.dat" #EB#
#namefile="230217.dat"#DMCEP#
#namefile2="OGLE053513.68-701354.1.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="230217.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE010902.50-725018.9.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="230217.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE052205.74-691701.6.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="82181.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE052205.74-691701.6.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="c-112430.hip" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #EB#
#namefile="230217.dat"#DMCEP#
namefile2="c-112430.hip" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	if(i==2)#
	data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="c-51338.hip" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	if(i==2)#
	data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE052213.05-700328.4.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	if(i==2)#
	data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE052213.05-700328.4.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="OGLE051702.49-692724.2.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="70881.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
	iarma$par["phi"]#
	iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
	seiarma=sqrt(diag(solve(iarma$hessian)))#
	2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="70881.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	if(i!=2)#
	{#
		iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
		iarma$par["phi"]#
		iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seiarma=sqrt(diag(solve(iarma$hessian)))#
		2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	}#
	if(i==2)#
	{#
		iarma<-imaMLE(serie = y,time = newt, hessian = TRUE)#
		ima$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seima=sqrt(diag(solve(ima$hessian)))#
		2*(1-pnorm(abs(ima$par["theta"]/seima[1]),0,1))#
	predV <- iarmaPredictOneStep(theta = ima$par["theta"], var = ima$par["var"],serie = y, time = newt)#
	}#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="70881.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	if(i!=2)#
	{#
		iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
		iarma$par["phi"]#
		iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seiarma=sqrt(diag(solve(iarma$hessian)))#
		2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	}#
	if(i==2)#
	{#
		ima<-imaMLE(serie = y,time = newt, hessian = TRUE)#
		ima$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seima=sqrt(diag(solve(ima$hessian)))#
		2*(1-pnorm(abs(ima$par["theta"]/seima[1]),0,1))#
	predV <- iarmaPredictOneStep(theta = ima$par["theta"], var = ima$par["var"],serie = y, time = newt)#
	}#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="70881.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	if(i!=2)#
	{#
		iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
		iarma$par["phi"]#
		iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seiarma=sqrt(diag(solve(iarma$hessian)))#
		2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	}#
	if(i==2)#
	{#
		ima<-imaMLE(serie = y,time = newt, hessian = TRUE)#
		ima$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seima=sqrt(diag(solve(ima$hessian)))#
		2*(1-pnorm(abs(ima$par["theta"]/seima[1]),0,1))#
	predV <- imaPredictOneStep(theta = ima$par["theta"], var = ima$par["var"],serie = y, time = newt)#
	}#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
head(predV)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="70881.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	if(i!=2)#
	{#
		iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
		iarma$par["phi"]#
		iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seiarma=sqrt(diag(solve(iarma$hessian)))#
		2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	}#
	if(i==2)#
	{#
		ima<-imaMLE(serie = y,time = newt, hessian = TRUE)#
		ima$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seima=sqrt(diag(solve(ima$hessian)))#
		2*(1-pnorm(abs(ima$par["theta"]/seima[1]),0,1))#
	predV <- imaPredictOneStep(theta = ima$par["theta"], var = ima$par["var"],serie = y, time = newt)$pred#
	}#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/")#
data2<-read.table(file="IMAFit4.txt",sep=" ",header=T)#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/Otros Datos Irregularmente Espaciados/Astro")#
namefile="106992.dat" #RRD#
#namefile="230217.dat"#DMCEP#
namefile2="70881.dat" #EA#
namefile3="OGLE052959.87-695950.1.dat" #EB #IARMA#
#namefile3="OGLE054229.59-710251.4.dat" #EB #IARMA#
#namefile3="OGLE050520.56-683916.9.dat" #EB #IARMA#
#
namefile=c(namefile,namefile2,namefile3)#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
for(i in 1:length(namefile))#
{#
	#if(i!=2)#
	data=read.table(paste("TS-OGLE/",namefile[i],sep=""))#
	#if(i==2)#
	#data=read.table(paste("TS-HIPPARCOS/",namefile[i],sep=""))#
	t=trunc(data[,1])#
      	pos=which(diff(t)==0)#
      	if(length(pos)>0)#
      	{#
            t2=unique(t[pos])#
            data0=data#
            fin=NULL#
            pos2=NULL#
            pos3=NULL#
            for(j in 1:length(t2))#
            {#
                pos=which(t2[j]==t)#
                pos2=c(pos,pos2)#
                mediam=mean(data[pos,2])#
                mediat=mean(data[pos,1])#
                mediamerr=mean(data[pos,3])#
                fin=rbind(fin,c(mediat,mediam,mediamerr))#
            }#
            data0=rbind(data0[-pos2,1:3],fin)#
            data=data0[order(data0[,1]),]#
      	}#
	f1=as.numeric(data2[which(data2[,1]==namefile[i]),3])#
	results=harmonicfit(file=data,f1=f1)#
	y=as.numeric(results$res/sqrt(var(results$res)))#
	sT=results$t#
	newt=sT/min(diff(sT))#
	print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
	if(i!=2)#
	{#
		iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
		iarma$par["phi"]#
		iarma$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seiarma=sqrt(diag(solve(iarma$hessian)))#
		2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
	2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
	predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
	}#
	if(i==2)#
	{#
		ima<-imaMLE(serie = y,time = newt, hessian = TRUE)#
		ima$par["theta"]#
	#print(summary(diff(newt)))#
	#print(summary(diff(sT)))#
		seima=sqrt(diag(solve(ima$hessian)))#
		2*(1-pnorm(abs(ima$par["theta"]/seima[1]),0,1))#
	predV <- imaPredictOneStep(theta = ima$par["theta"], var = ima$par["var"],serie = y, time = newt)$pred#
	}#
	st.res2=(predV[,1] - predV[,2])#
	blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
	varIARMA=var(st.res2)#
	print(blIARMA)#
	#IARMA#
	predV=data.frame("newt"=index(predV),predV)#
	out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
	p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]]<- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
IAR.Test<-function (y, sT, f, phi, plot = "TRUE", xlim = c(-1, 0)) #
{#
    aux = seq(2.5, 47.5, by = 2.5)#
    aux = c(-aux, aux)#
    aux = sort(aux)#
    f0 = f * (1 + aux/100)#
    f0 <- sort(f0)#
    l1 <- length(f0)#
    bad <- rep(0, l1)#
    data <- cbind(sT, y)#
    for (j in 1:l1) {#
        results = harmonicfit(file = data, f1 = f0[j])#
        y = results$res/sqrt(var(results$res))#
        sT = results$t#
        res3 = IAR.loglik(y, sT)[1]#
        bad[j] = res3$phi#
    }#
    mubf <- mean(log(bad))#
    sdbf <- sd(log(bad))#
    z0 <- log(phi)#
    pvalue <- pnorm(z0, mubf, sdbf)#
    out <- NULL#
    end <- cbind(c(f0,f),log(c(bad,phi)))#
    end <- end[order(end[,1]),]#
    end <- as.data.frame(end)#
    names(end)=c("f","phi")#
    if (plot == "TRUE") {#
        phi2 = bad#
        phi2 <- as.data.frame(phi2)#
        phi <- as.data.frame(phi)#
        out <- ggplot(phi2, aes(log(phi2))) + geom_density(adjust = 2) + #
            xlab("") + ylab("") + theme_bw() + ggtitle("") + #
            geom_point(data = phi, aes(log(phi)), y = 0, size = 4, #
                col = "red", shape = 17) + xlim(xlim[1], xlim[2]) + #
            theme(plot.title = element_text(face = "bold", size = 20), #
                panel.grid.major = element_blank(), panel.grid.minor = element_blank(), #
                panel.background = element_blank())#
        out#
    }#
    return(list(phi = phi, norm = c(mubf, sdbf), z0 = z0, pvalue = pvalue, #
        out = out,phi.freq=end))#
}#
#IMA#
namefile="ZTFZTF18aazjszr.txt" #QSO#
#namefile="ZTFZTF18abkfxyz.txt" #QSO#
#namefile="ZTFZTF18aatzpwr.txt" #Blazar#
#namefile="ZTFZTF18aahbiav.txt" #AGN#
#namefile="ZTFZTF17aabgzgb.txt" #CVNOVA#
#
#IARMA#
#namefile2="ZTFZTF18aaylcic.txt" #CVNOVA#
#namefile2="ZTFZTF18aavzjuw.txt" #CVNOVA #PasaTodo#
#namefile2="ZTFZTF18abjtwlb.txt" #CVNOVA  #PasaTodo#
#namefile2="ZTFZTF18aaspmis.txt" #Blazar #Candidato#
namefile2="ZTFZTF18aahbegy.txt" #Blazar#
#namefile2="ZTFZTF18aanyflt.txt" #AGN#
#namefile2="ZTFZTF18aazuxin.txt" #LPV#
#
#IAR#
#
namefile3="ZTFZTF18aajterf.txt" #Blazar#
p0=NULL#
p1=NULL#
p2=NULL#
p3=NULL#
out=NULL#
namefile=c(namefile,namefile2,namefile3)#
for(i in 1:length(namefile))#
{#
	setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/ZTF")#
	data=read.csv(namefile[i],sep=",",header=T)#
	data=data[which(data$fid==1),]#
	data=data[,c(2,4,5)] #
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IAR Paper")#
require(iAR)#
require(ggplot2)#
require(gridExtra)#
names(data)=c("t","m","merr")#
y=data$m/sqrt(var(data$m))#
sT=data$t#
res3=IAR.loglik(y,sT,standarized='TRUE')[1]#
res3$phi#
#
setwd("/Users/felo/Google Drive (fielorrieta@mat.uc.cl)/IMAPaper/IMA2")#
source('imaMinusLogLik.R')#
source('imaMLE.R')#
source('imaGbcf.R')#
source('imaPredictOneStep.R')#
source('imaSim.R')#
source('iarmaMinusLogLik.R')#
source('iarmaMLE.R')#
source('iarmaMLE2.R')#
source('iarmaGbcf.R')#
source('iarmaPredictOneStep.R')#
source('iarmaBootSamples.R')#
source('iarmaSS.R')#
source('TestiARMA.R')#
require(AITS)#
require(sparseMVN)#
require(zoo)#
require(ggplot2)#
require(qqplotr)#
require(FitAR)#
#y1=log(data$m + 1.1*abs(min(data$m)))#
y1=data$m#
y=y1/sqrt(var(y1))#
sT=data$t#
newt=sT/min(diff(sT))#
print(Box.test(as.numeric(y),lag=1,type="Ljung")$p.value)#
iarma<-iarmaMLE(serie = y,time = newt, hessian = TRUE)#
iarma$par["phi"]#
iarma$par["theta"]#
plot(newt,y,type="l")#
#
seiarma=sqrt(diag(solve(iarma$hessian)))#
2*(1-pnorm(abs(iarma$par["phi"]/seiarma[1]),0,1))#
2*(1-pnorm(abs(iarma$par["theta"]/seiarma[2]),0,1))#
predV <- iarmaPredictOneStep(phi = iarma$par["phi"],theta = iarma$par["theta"], var = iarma$par["var"],serie = y, time = newt)#
st.res2=(predV[,1] - predV[,2])#
blIARMA=Box.test(as.numeric(st.res2),lag=1,type="Ljung")$p.value#
varIARMA=var(st.res2)#
print(blIARMA)#
#IARMA#
predV=data.frame("newt"=index(predV),predV)#
out[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt,y = serie), size = 1) + labs(x = "Time", y = "") +geom_rug(aes(x = newt), col = 2)#
p0[[i]]<-ggplot(predV) + theme_light() + geom_line(aes(x = newt, y = serie), col = "gray60", size = 1) + geom_line(aes(x = newt, y = PredictOneStep), col = "blue") + geom_line(aes(x = newt, y = PredictOneStep - (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") + geom_line(aes(x = newt, y = PredictOneStep + (1.96 * sqrt(mspeOneStep))),linetype = "dashed", col = "blue") +labs(x = "Time", y = "") + geom_rug(aes(x = newt), col = 2)#
#
# library(qqplotr)#
#
st.res <- (predV$serie - predV$PredictOneStep)#
Box.test(as.numeric(st.res),lag=1,type="Ljung")$p.value#
p1[[i]] <- ggplot(as.data.frame(st.res), aes(sample = st.res)) +theme_light() + qqplotr::stat_qq_band(alpha = 0.4, fill = "gray60", conf=0.99) + qqplotr::stat_qq_line(colour = "gray60") + qqplotr::stat_qq_point(size = 0.6) + labs(x = "theoretical", y = "sample")#
#
bacf <- acf(zoo::coredata(st.res), lag.max = 25, plot = FALSE)#
bacfdf <- with(bacf, data.frame(lag, acf))[-1,]#
#
p2[[i]] <- ggplot(data = bacfdf, mapping = aes(x = lag, y = acf)) + geom_hline(aes(yintercept = 0)) + geom_hline(aes(yintercept = qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + geom_hline(aes(yintercept = -qnorm(0.975)*sqrt(1/length(st.res))), linetype = "dashed", col = "blue") + theme_light() + ylim(-1, 1) + geom_segment(mapping = aes(xend = lag, yend = 0))#
ans <- FitAR::LjungBoxTest(zoo::coredata(st.res), lag.max = 25)#
#
pb <- data.frame(m = ans[, "m"], pv = ans[, "pvalue"])#
#
p3[[i]] <- ggplot(pb) + ylim(0, 1) + geom_point(aes(x = m, y = pv), size = 0.6) + labs(x = "lag", y = "p-value") + geom_hline(aes(yintercept = 0.05), linetype = "dashed", col = "blue")#
#
}#
#
gridExtra::grid.arrange(p0[[1]],p1[[1]],p3[[1]],p0[[2]],p1[[2]],p3[[2]],p0[[3]],p1[[3]],p3[[3]],ncol=3,nrow=3)
